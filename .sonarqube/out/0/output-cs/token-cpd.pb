ıd
-/home/alex/c#/SpaceProject/src/WeatherData.cs
	namespace 	
SpaceProject
 
. 
src 
{ 
public 

enum 

CloudCover 
{ 
Cumulus 
, 
Stratus 
, 
Stratocumulus 
, 
Cumulonimbus		 
,		 
Nimbus

 
,

 
Altocumulus 
, 
Altostratus 
, 
Cirrus 
, 
Cirrostratus 
, 
Cirrocumulus 
, 
Default 
} 
public 

class 
WeatherData 
{ 
private 
int 
_day 
= 
$num 
; 
private 
double 
_temperature #
=$ %
$num& '
;' (
private 
double 
_wind 
= 
$num  
;  !
private 
double 
	_humidity  
=! "
$num# $
;$ %
private 
double 
_precipitation %
=& '
$num( )
;) *
public 
bool 
Lighting 
{ 
get "
;" #
set$ '
;' (
}) *
=+ ,
false- 2
;2 3
public 

CloudCover 
Clouds  
{! "
get# &
;& '
set( +
;+ ,
}- .
=/ 0

CloudCover1 ;
.; <
Default< C
;C D
private 
static 
double #
_minTemperatureCriteria 5
=6 7
$num8 9
;9 :
private 
static 
double #
_maxTemperatureCriteria 5
=6 7
$num8 :
;: ;
private 
static 
double 
_windCriteria +
=, -
$num. 0
;0 1
private 
static 
double "
_precipitationCriteria 4
=5 6
$num7 8
;8 9
private 
static 
double 
_humidityCriteria /
=0 1
$num2 4
;4 5
public   
int   
Day   
{!! 	
get"" 
{"" 
return"" 
_day"" 
;"" 
}""  
set## 
{$$ 
if%% 
(%% 
value%% 
<%% 
$num%% 
||%%  
value%%! &
>%%' (
$num%%) +
)%%+ ,
throw&& 
new&& 
ArgumentException&& /
(&&/ 0
$str&&0 G
+&&H I
$"''0 2
$str''2 7
{''7 8
value''8 =
}''= >
"''> ?
)''? @
;''@ A
_day(( 
=(( 
value(( 
;(( 
})) 
}** 	
public++ 
double++ 
Temperature++ !
{,, 	
get-- 
{-- 
return-- 
_temperature-- %
;--% &
}--' (
set.. 
{// 
if00 
(00 
value00 
<00 
-00 
$num00 
||00  "
value00# (
>00) *
$num00+ -
)00- .
throw11 
new11 
ArgumentException11 /
(11/ 0
$str110 G
+11H I
$"220 2
$str222 ?
{22? @
value22@ E
}22E F
"22F G
)22G H
;22H I
_temperature33 
=33 
value33 $
;33$ %
}44 
}55 	
public66 
double66 
Wind66 
{77 	
get88 
{88 
return88 
_wind88 
;88 
}88  !
set99 
{:: 
if;; 
(;; 
value;; 
<;; 
$num;; 
||;;  
value;;! &
>;;' (
$num;;) +
);;+ ,
throw<< 
new<< 
ArgumentException<< /
(<</ 0
$str<<0 G
+<<H I
$"==0 2
$str==2 E
{==E F
value==F K
}==K L
"==L M
)==M N
;==N O
_wind>> 
=>> 
value>> 
;>> 
}?? 
}@@ 	
publicAA 
doubleAA 
HumidityAA 
{BB 	
getCC 
{CC 
returnCC 
	_humidityCC "
;CC" #
}CC$ %
setDD 
{EE 
ifFF 
(FF 
valueFF 
<FF 
$numFF 
||FF  
valueFF! &
>FF' (
$numFF) ,
)FF, -
throwGG 
newGG 
ArgumentExceptionGG /
(GG/ 0
$strGG0 G
+GGH I
$"HH0 2
$strHH2 A
{HHA B
valueHHB G
}HHG H
"HHH I
)HHI J
;HHJ K
	_humidityII 
=II 
valueII !
;II! "
}JJ 
}KK 	
publicLL 
doubleLL 
PrecipitationLL #
{MM 	
getNN 
{NN 
returnNN 
_precipitationNN '
;NN' (
}NN) *
setOO 
{PP 
ifQQ 
(QQ 
valueQQ 
<QQ 
$numQQ 
||QQ  
valueQQ! &
>QQ' (
$numQQ) ,
)QQ, -
throwRR 
newRR 
ArgumentExceptionRR /
(RR/ 0
$strRR0 G
+RRH I
$"SS0 2
$strSS2 F
{SSF G
valueSSG L
}SSL M
"SSM N
)SSN O
;SSO P
_precipitationTT 
=TT  
valueTT! &
;TT& '
}UU 
}VV 	
publicWW 
staticWW 
doubleWW "
MinTemperatureCriteriaWW 3
{XX 	
getYY 
{YY 
returnYY #
_minTemperatureCriteriaYY 0
;YY0 1
}YY2 3
setZZ 
{[[ 
if\\ 
(\\ 
value\\ 
<\\ 
-\\ 
$num\\ 
||\\  "
value\\# (
>\\) *
$num\\+ -
)\\- .
throw]] 
new]] 
ArgumentException]] /
(]]/ 0
$str]]0 G
+]]H I
$"^^0 2
$str^^2 P
{^^P Q
value^^Q V
}^^V W
"^^W X
)^^X Y
;^^Y Z
if__ 
(__ 
value__ 
>__ #
_maxTemperatureCriteria__ 3
)__3 4
throw`` 
new`` 
ArgumentException`` /
(``/ 0
$str``0 G
+``H I
$"aa0 2
$straa2 P
{aaP Q
valueaaQ V
}aaV W
"aaW X
+aaY Z
$strbb0 \
+bb] ^
$strcc0 R
+ccS T
$"dd0 2
$strdd2 3
{dd3 4#
_maxTemperatureCriteriadd4 K
}ddK L
$strddL M
"ddM N
)ddN O
;ddO P#
_minTemperatureCriteriaee '
=ee( )
valueee* /
;ee/ 0
}ff 
}gg 	
publichh 
statichh 
doublehh "
MaxTemperatureCriteriahh 3
{ii 	
getjj 
{jj 
returnjj #
_maxTemperatureCriteriajj 0
;jj0 1
}jj2 3
setkk 
{ll 
ifmm 
(mm 
valuemm 
<mm 
-mm 
$nummm 
||mm  "
valuemm# (
>mm) *
$nummm+ -
)mm- .
thrownn 
newnn 
ArgumentExceptionnn /
(nn/ 0
$strnn0 G
+nnH I
$"oo0 2
$stroo2 P
{ooP Q
valueooQ V
}ooV W
"ooW X
)ooX Y
;ooY Z
ifpp 
(pp 
valuepp 
<pp #
_minTemperatureCriteriapp 3
)pp3 4
throwqq 
newqq 
ArgumentExceptionqq /
(qq/ 0
$strqq0 G
+qqH I
$"rr0 2
$strrr2 P
{rrP Q
valuerrQ V
}rrV W
"rrW X
+rrY Z
$strss0 [
+ss\ ]
$strtt0 R
+ttS T
$"uu0 2
$struu2 3
{uu3 4#
_minTemperatureCriteriauu4 K
}uuK L
$struuL M
"uuM N
)uuN O
;uuO P#
_maxTemperatureCriteriavv '
=vv( )
valuevv* /
;vv/ 0
}ww 
}xx 	
publiczz 
staticzz 
doublezz 
WindCriteriazz )
{{{ 	
get|| 
{|| 
return|| 
_windCriteria|| &
;||& '
}||( )
set}} 
{~~ 
if 
( 
value 
< 
$num 
||  
value! &
>' (
$num) +
)+ ,
throw
ÄÄ 
new
ÄÄ 
ArgumentException
ÄÄ /
(
ÄÄ/ 0
$str
ÄÄ0 G
+
ÄÄH I
$"
ÅÅ0 2
$str
ÅÅ2 N
{
ÅÅN O
value
ÅÅO T
}
ÅÅT U
"
ÅÅU V
)
ÅÅV W
;
ÅÅW X
_windCriteria
ÇÇ 
=
ÇÇ 
value
ÇÇ  %
;
ÇÇ% &
}
ÉÉ 
}
ÑÑ 	
public
ÖÖ 
static
ÖÖ 
double
ÖÖ 
HumidityCriteria
ÖÖ -
{
ÜÜ 	
get
áá 
{
áá 
return
áá 
_humidityCriteria
áá *
;
áá* +
}
áá, -
set
àà 
{
ââ 
if
ää 
(
ää 
value
ää 
<
ää 
$num
ää 
||
ää  
value
ää! &
>
ää' (
$num
ää) ,
)
ää, -
throw
ãã 
new
ãã 
ArgumentException
ãã /
(
ãã/ 0
$str
ãã0 G
+
ããH I
$"
åå0 2
$str
åå2 J
{
ååJ K
value
ååK P
}
ååP Q
"
ååQ R
)
ååR S
;
ååS T
_humidityCriteria
çç !
=
çç" #
value
çç$ )
;
çç) *
}
éé 
}
èè 	
public
êê 
static
êê 
double
êê #
PrecipitationCriteria
êê 2
{
ëë 	
get
íí 
{
íí 
return
íí $
_precipitationCriteria
íí /
;
íí/ 0
}
íí1 2
set
ìì 
{
îî 
if
ïï 
(
ïï 
value
ïï 
<
ïï 
$num
ïï 
||
ïï  
value
ïï! &
>
ïï' (
$num
ïï) ,
)
ïï, -
throw
ññ 
new
ññ 
ArgumentException
ññ /
(
ññ/ 0
$str
ññ0 G
+
ññH I
$"
óó0 2
$str
óó2 F
{
óóF G
value
óóG L
}
óóL M
"
óóM N
)
óóN O
;
óóO P$
_precipitationCriteria
òò &
=
òò' (
value
òò) .
;
òò. /
}
ôô 
}
öö 	
public
úú 
override
úú 
string
úú 
ToString
úú '
(
úú' (
)
úú( )
{
ùù 	
return
ûû 
$"
ûû 
$str
ûû 
{
ûû 
Day
ûû 
}
ûû 
$str
ûû .
{
ûû. /
Temperature
ûû/ :
}
ûû: ;
$str
ûû; L
{
ûûL M
Wind
ûûM Q
}
ûûQ R
$str
ûûR X
"
ûûX Y
+
ûûZ [
$"
üü 
$str
üü 
{
üü 
Humidity
üü "
}
üü" #
$str
üü# 6
{
üü6 7
Precipitation
üü7 D
}
üüD E
$str
üüE H
"
üüH I
+
üüJ K
$"
†† 
$str
†† 
{
†† 
Lighting
†† "
}
††" #
$str
††# .
{
††. /
Clouds
††/ 5
}
††5 6
"
††6 7
;
††7 8
}
°° 	
public
££ 
static
££ 
void
££ "
SetCriteriaToDefault
££ /
(
££/ 0
)
££0 1
{
§§ 	%
_minTemperatureCriteria
•• #
=
••$ %
$num
••& '
;
••' (%
_maxTemperatureCriteria
¶¶ #
=
¶¶$ %
$num
¶¶& (
;
¶¶( )
_windCriteria
ßß 
=
ßß 
$num
ßß 
;
ßß $
_precipitationCriteria
®® "
=
®®# $
$num
®®% &
;
®®& '
_humidityCriteria
©© 
=
©© 
$num
©©  "
;
©©" #
}
™™ 	
}
´´ 
}¨¨ ®£
,/home/alex/c#/SpaceProject/src/DataReader.cs
	namespace 	
SpaceProject
 
. 
src 
{ 
public 

static 
class 

DataReader "
{ 
private 
static 
WeatherData "
[" #
]# $
ReadCSV% ,
(, -
string- 3
filePath4 <
)< =
{		 	
string

 
[

 
]

 
lines

 
=

 
File

 !
.

! "
ReadAllLines

" .
(

. /
filePath

/ 7
)

7 8
;

8 9
CheckCSV 
( 
lines 
, 
filePath $
)$ %
;% &
WeatherData 
[ 
] 
weatherData %
=& '
new 
WeatherData 
[ 
lines !
[! "
$num" #
]# $
.$ %
Split% *
(* +
$char+ .
). /
./ 0
Length0 6
-7 8
$num9 :
]: ;
;; <
for 
( 
int 
i 
= 
$num 
; 
i 
< 
weatherData  +
.+ ,
Length, 2
;2 3
i4 5
++5 7
)7 8
{ 
weatherData 
[ 
i 
] 
=  
new! $
WeatherData% 0
(0 1
)1 2
;2 3
} 
for 
( 
int 
i 
= 
$num 
; 
i 
< 
lines  %
.% &
Length& ,
;, -
i. /
++/ 1
)1 2
{ 
string 
[ 
] 
values 
=  !
lines" '
[' (
i( )
]) *
.* +
Split+ 0
(0 1
$char1 4
)4 5
;5 6
for 
( 
int 
j 
= 
$num 
; 
j  !
<" #
values$ *
.* +
Length+ 1
;1 2
j3 4
++4 6
)6 7
{ 
int 
tempInt 
;  
double 

tempDouble %
;% &
bool 
isParseFailure '
;' (
switch 
( 
values "
[" #
$num# $
]$ %
.% &
ToLower& -
(- .
). /
./ 0
Replace0 7
(7 8
$str8 <
,< =
$str> @
)@ A
)A B
{   
case!! 
$str!! "
:!!" #
isParseFailure"" *
=""+ ,
!""- .
int"". 1
.""1 2
TryParse""2 :
("": ;
values""; A
[""A B
j""B C
]""C D
,""D E
out""F I
tempInt""J Q
)""Q R
;""R S
if## 
(##  
isParseFailure##  .
)##. /
{$$ 
throw%%  %
new%%& )
FormatException%%* 9
(%%9 :
$str&&$ ;
+&&< =
$str''$ 2
+''3 4
$"(($ &
$str((& *
{((* +
i((+ ,
+((- .
$num((/ 0
}((0 1
$str((1 ;
{((; <
j((< =
+((> ?
$num((@ A
}((A B
$str((B D
"((D E
)((E F
;((F G
})) 
weatherData** '
[**' (
j**( )
-*** +
$num**, -
]**- .
.**. /
Day**/ 2
=**3 4
tempInt**5 <
;**< =
break++ !
;++! "
case-- 
$str-- *
:--* +
isParseFailure.. *
=..+ ,
!// 
double// #
.//# $
TryParse//$ ,
(//, -
values//- 3
[//3 4
j//4 5
]//5 6
,//6 7
NumberStyles//8 D
.//D E
Float//E J
,//J K
CultureInfo00 '
.00' (
InvariantCulture00( 8
,008 9
out00: =

tempDouble00> H
)00H I
;00I J
if22 
(22  
isParseFailure22  .
)22. /
{33 
throw44  %
new44& )
FormatException44* 9
(449 :
$str55$ D
+55E F
$str66$ 5
+666 7
$"77$ &
$str77& *
{77* +
i77+ ,
+77- .
$num77/ 0
}770 1
$str771 ;
{77; <
j77< =
+77> ?
$num77@ A
}77A B
$str77B D
"77D E
)77E F
;77F G
}88 
weatherData99 '
[99' (
j99( )
-99* +
$num99, -
]99- .
.99. /
Temperature99/ :
=99; <

tempDouble99= G
;99G H
break:: !
;::! "
case<< 
$str<< #
:<<# $
isParseFailure== *
===+ ,
!>> 
double>> #
.>># $
TryParse>>$ ,
(>>, -
values>>- 3
[>>3 4
j>>4 5
]>>5 6
,>>6 7
NumberStyles>>8 D
.>>D E
Float>>E J
,>>J K
CultureInfo?? '
.??' (
InvariantCulture??( 8
,??8 9
out??: =

tempDouble??> H
)??H I
;??I J
ifAA 
(AA  
isParseFailureAA  .
)AA. /
{BB 
throwCC  %
newCC& )
FormatExceptionCC* 9
(CC9 :
$strDD$ =
+DD> ?
$strEE$ 5
+EE6 7
$"FF$ &
$strFF& *
{FF* +
iFF+ ,
+FF- .
$numFF/ 0
}FF0 1
$strFF1 ;
{FF; <
jFF< =
+FF> ?
$numFF@ A
}FFA B
$strFFB D
"FFD E
)FFE F
;FFF G
}GG 
weatherDataHH '
[HH' (
jHH( )
-HH* +
$numHH, -
]HH- .
.HH. /
WindHH/ 3
=HH4 5

tempDoubleHH6 @
;HH@ A
breakII !
;II! "
caseKK 
$strKK '
:KK' (
isParseFailureLL *
=LL+ ,
!MM 
doubleMM #
.MM# $
TryParseMM$ ,
(MM, -
valuesMM- 3
[MM3 4
jMM4 5
]MM5 6
,MM6 7
NumberStylesMM8 D
.MMD E
FloatMME J
,MMJ K
CultureInfoNN '
.NN' (
InvariantCultureNN( 8
,NN8 9
outNN: =

tempDoubleNN> H
)NNH I
;NNI J
ifPP 
(PP  
isParseFailurePP  .
)PP. /
{QQ 
throwRR  %
newRR& )
FormatExceptionRR* 9
(RR9 :
$strSS$ A
+SSB C
$strTT$ 5
+TT6 7
$"UU$ &
$strUU& *
{UU* +
iUU+ ,
+UU- .
$numUU/ 0
}UU0 1
$strUU1 ;
{UU; <
jUU< =
+UU> ?
$numUU@ A
}UUA B
$strUUB D
"UUD E
)UUE F
;UUF G
}VV 
weatherDataWW '
[WW' (
jWW( )
-WW* +
$numWW, -
]WW- .
.WW. /
HumidityWW/ 7
=WW8 9

tempDoubleWW: D
;WWD E
breakXX !
;XX! "
caseZZ 
$strZZ ,
:ZZ, -
isParseFailure[[ *
=[[+ ,
!\\ 
double\\ #
.\\# $
TryParse\\$ ,
(\\, -
values\\- 3
[\\3 4
j\\4 5
]\\5 6
,\\6 7
NumberStyles\\8 D
.\\D E
Float\\E J
,\\J K
CultureInfo]] '
.]]' (
InvariantCulture]]( 8
,]]8 9
out]]: =

tempDouble]]> H
)]]H I
;]]I J
if__ 
(__  
isParseFailure__  .
)__. /
{`` 
throwaa  %
newaa& )
FormatExceptionaa* 9
(aa9 :
$strbb$ F
+bbG H
$strcc$ 5
+cc6 7
$"dd$ &
$strdd& *
{dd* +
idd+ ,
+dd- .
$numdd/ 0
}dd0 1
$strdd1 ;
{dd; <
jdd< =
+dd> ?
$numdd@ A
}ddA B
$strddB D
"ddD E
)ddE F
;ddF G
}ee 
weatherDataff '
[ff' (
jff( )
-ff* +
$numff, -
]ff- .
.ff. /
Precipitationff/ <
=ff= >

tempDoubleff? I
;ffI J
breakgg !
;gg! "
caseii 
$strii '
:ii' (
ifjj 
(jj  
valuesjj  &
[jj& '
jjj' (
]jj( )
.jj) *
ToLowerjj* 1
(jj1 2
)jj2 3
.kk) *
Replacekk* 1
(kk1 2
$strkk2 6
,kk6 7
$strkk8 :
)kk: ;
.ll) *
Equalsll* 0
(ll0 1
$strll1 5
)ll5 6
)ll6 7
weatherDatann  +
[nn+ ,
jnn, -
-nn. /
$numnn0 1
]nn1 2
.nn2 3
Lightingnn3 ;
=nn< =
falsenn> C
;nnC D
elsepp  
ifpp! #
(pp$ %
valuespp% +
[pp+ ,
jpp, -
]pp- .
.pp. /
ToLowerpp/ 6
(pp6 7
)pp7 8
.qq. /
Replaceqq/ 6
(qq6 7
$strqq7 ;
,qq; <
$strqq= ?
)qq? @
.rr. /
Equalsrr/ 5
(rr5 6
$strrr6 ;
)rr; <
)rr< =
weatherDatatt  +
[tt+ ,
jtt, -
-tt. /
$numtt0 1
]tt1 2
.tt2 3
Lightingtt3 ;
=tt< =
truett> B
;ttB C
elseuu  
{vv 
throwww  %
newww& )
FormatExceptionww* 9
(ww9 :
$strxx  K
+xxL M
$stryy  0
+yy1 2
$"zz  "
{zz" #
valueszz# )
[zz) *
jzz* +
]zz+ ,
.zz, -
ToLowerzz- 4
(zz4 5
)zz5 6
.zz6 7
Replacezz7 >
(zz> ?
$strzz? C
,zzC D
$strzzE G
)zzG H
}zzH I
"zzI J
+zzK L
$"{{  "
$str{{" )
{{{) *
i{{* +
+{{, -
$num{{. /
}{{/ 0
$str{{0 :
{{{: ;
j{{; <
+{{= >
$num{{? @
}{{@ A
"{{A B
){{B C
;{{C D
}|| 
break}} !
;}}! "
case 
$str %
:% &

CloudCover
ÄÄ &
	tempCloud
ÄÄ' 0
;
ÄÄ0 1
isParseFailure
ÅÅ *
=
ÅÅ+ ,
!
ÅÅ- .
Enum
ÅÅ. 2
.
ÅÅ2 3
TryParse
ÅÅ3 ;
(
ÅÅ; <
values
ÅÅ< B
[
ÅÅB C
j
ÅÅC D
]
ÅÅD E
.
ÇÇ2 3
Replace
ÇÇ3 :
(
ÇÇ: ;
$str
ÇÇ; ?
,
ÇÇ? @
$str
ÇÇA C
)
ÇÇC D
,
ÇÇD E
out
ÇÇF I
	tempCloud
ÇÇJ S
)
ÇÇS T
;
ÇÇT U
if
ÑÑ 
(
ÑÑ  
isParseFailure
ÑÑ  .
)
ÑÑ. /
{
ÖÖ 
throw
ÜÜ  %
new
ÜÜ& )
FormatException
ÜÜ* 9
(
ÜÜ9 :
$str
áá$ 8
+
áá9 :
$"
àà$ &
$str
àà& 7
{
àà7 8
i
àà8 9
+
àà: ;
$num
àà< =
}
àà= >
$str
àà> H
{
ààH I
j
ààI J
+
ààK L
$num
ààM N
}
ààN O
$str
ààO Q
"
ààQ R
+
ààS T
$"
ââ$ &
$str
ââ& 5
{
ââ5 6
values
ââ6 <
[
ââ< =
j
ââ= >
]
ââ> ?
.
ââ? @
Replace
ââ@ G
(
ââG H
$str
ââH L
,
ââL M
$str
ââN P
)
ââP Q
}
ââQ R
"
ââR S
)
ââS T
;
ââT U
}
ää 
weatherData
ãã '
[
ãã' (
j
ãã( )
-
ãã* +
$num
ãã, -
]
ãã- .
.
ãã. /
Clouds
ãã/ 5
=
ãã6 7
	tempCloud
ãã8 A
;
ããA B
break
åå !
;
åå! "
default
éé 
:
éé  
throw
èè !
new
èè" %
FormatException
èè& 5
(
èè5 6
$"
êê  "
$str
êê" :
{
êê: ;
filePath
êê; C
}
êêC D
$str
êêD E
"
êêE F
+
êêG H
$"
ëë  "
$str
ëë" C
{
ëëC D
i
ëëD E
+
ëëF G
$num
ëëH I
}
ëëI J
$str
ëëJ K
"
ëëK L
+
ëëM N
$str
íí  3
+
íí4 5
$"
ìì  "
{
ìì" #
values
ìì# )
[
ìì) *
$num
ìì* +
]
ìì+ ,
.
ìì, -
ToLower
ìì- 4
(
ìì4 5
)
ìì5 6
.
ìì6 7
Replace
ìì7 >
(
ìì> ?
$str
ìì? C
,
ììC D
$str
ììE G
)
ììG H
}
ììH I
"
ììI J
)
ììJ K
;
ììK L
}
îî 
}
ïï 
}
ññ 
return
óó 
weatherData
óó 
;
óó 
}
òò 	
private
öö 
static
öö 
void
öö 
CheckCSV
öö $
(
öö$ %
string
öö% +
[
öö+ ,
]
öö, -
lines
öö. 3
,
öö3 4
string
öö5 ;
filePath
öö< D
)
ööD E
{
õõ 	
if
úú 
(
úú 
lines
úú 
.
úú 
Length
úú 
!=
úú 
$num
úú  !
)
úú! "
{
ùù 
throw
ûû 
new
ûû 
FormatException
ûû )
(
ûû) *
$"
üü 
$str
üü 3
{
üü3 4
filePath
üü4 <
}
üü< =
$str
üü= ?
"
üü? @
+
üüA B
$str
†† :
+
††; <
$"
°° 
$str
°° #
{
°°# $
lines
°°$ )
.
°°) *
Length
°°* 0
}
°°0 1
"
°°1 2
)
°°2 3
;
°°3 4
}
¢¢ 
if
§§ 
(
§§ 
lines
§§ 
[
§§ 
$num
§§ 
]
§§ 
.
§§ 
Split
§§ 
(
§§ 
$char
§§ "
)
§§" #
.
§§# $
Length
§§$ *
>
§§+ ,
$num
§§- /
)
§§/ 0
{
•• 
throw
¶¶ 
new
¶¶ 
FormatException
¶¶ )
(
¶¶) *
$"
ßß 
$str
ßß 3
{
ßß3 4
filePath
ßß4 <
}
ßß< =
$str
ßß= ?
"
ßß? @
+
ßßA B
$str
®® 7
+
®®8 9
$"
©© 
$str
©© 0
{
©©0 1
lines
©©1 6
[
©©6 7
$num
©©7 8
]
©©8 9
.
©©9 :
Split
©©: ?
(
©©? @
$char
©©@ C
)
©©C D
.
©©D E
Length
©©E K
}
©©K L
"
©©L M
)
©©M N
;
©©N O
}
™™ 
var
¨¨ 
firstValues
¨¨ 
=
¨¨ 
lines
¨¨ #
.
¨¨# $
Select
¨¨$ *
(
¨¨* +
line
¨¨+ /
=>
¨¨0 2
line
¨¨3 7
.
¨¨7 8
Split
¨¨8 =
(
¨¨= >
$char
¨¨> A
)
¨¨A B
[
¨¨B C
$num
¨¨C D
]
¨¨D E
)
¨¨E F
;
¨¨F G
bool
≠≠ 
isEachRowUnique
≠≠  
=
≠≠! "
firstValues
≠≠# .
.
≠≠. /
Distinct
≠≠/ 7
(
≠≠7 8
)
≠≠8 9
.
≠≠9 :
Count
≠≠: ?
(
≠≠? @
)
≠≠@ A
==
≠≠B D
lines
≠≠E J
.
≠≠J K
Length
≠≠K Q
;
≠≠Q R
if
ØØ 
(
ØØ 
!
ØØ 
isEachRowUnique
ØØ  
)
ØØ  !
{
∞∞ 
throw
±± 
new
±± 
FormatException
±± )
(
±±) *
$"
≤≤ 
$str
≤≤ 3
{
≤≤3 4
filePath
≤≤4 <
}
≤≤< =
$str
≤≤= ?
"
≤≤? @
+
≤≤A B
$str
≥≥ C
)
≥≥C D
;
≥≥D E
}
¥¥ 
string
∑∑ 
?
∑∑ 
dayRow
∑∑ 
=
∑∑ 
lines
∑∑ "
.
∑∑" #
FirstOrDefault
∑∑# 1
(
∑∑1 2
line
∑∑2 6
=>
∑∑7 9
line
∑∑: >
.
∑∑> ?
ToLower
∑∑? F
(
∑∑F G
)
∑∑G H
.
∏∏> ?
Replace
∏∏? F
(
∏∏F G
$str
∏∏G K
,
∏∏K L
$str
∏∏M O
)
∏∏O P
.
ππ> ?

StartsWith
ππ? I
(
ππI J
$str
ππJ O
)
ππO P
)
ππP Q
;
ππQ R
if
ºº 
(
ºº 
dayRow
ºº 
!=
ºº 
null
ºº 
)
ºº 
{
ΩΩ 
string
ææ 
[
ææ 
]
ææ 
values
ææ 
=
ææ  !
dayRow
ææ" (
.
ææ( )
Split
ææ) .
(
ææ. /
$char
ææ/ 2
)
ææ2 3
;
ææ3 4
bool
øø 
isDayRowUnique
øø #
=
øø$ %
values
øø& ,
.
øø, -
Distinct
øø- 5
(
øø5 6
)
øø6 7
.
øø7 8
Count
øø8 =
(
øø= >
)
øø> ?
==
øø@ B
values
øøC I
.
øøI J
Length
øøJ P
;
øøP Q
if
¿¿ 
(
¿¿ 
!
¿¿ 
isDayRowUnique
¿¿ #
)
¿¿# $
{
¡¡ 
throw
¬¬ 
new
¬¬ 
FormatException
¬¬ -
(
¬¬- .
$"
√√ 
$str
√√ 3
{
√√3 4
filePath
√√4 <
}
√√< =
$str
√√= ?
"
√√? @
+
√√A B
$str
ƒƒ =
)
ƒƒ= >
;
ƒƒ> ?
}
≈≈ 
}
∆∆ 
}
«« 	
public
…… 
static
…… 
List
…… 
<
…… 
CityWeather
…… &
>
……& ' 
LoadDataFromFolder
……( :
(
……: ;
string
……; A

folderPath
……B L
)
……L M
{
   	
var
ÀÀ 
list
ÀÀ 
=
ÀÀ 
new
ÀÀ 
List
ÀÀ 
<
ÀÀ  
CityWeather
ÀÀ  +
>
ÀÀ+ ,
(
ÀÀ, -
)
ÀÀ- .
;
ÀÀ. /
string
ÕÕ 
[
ÕÕ 
]
ÕÕ 
fileEntries
ÕÕ  
=
ÕÕ! "
	Directory
ŒŒ 
.
ŒŒ 
GetFiles
ŒŒ 
(
ŒŒ 

folderPath
ŒŒ )
,
ŒŒ) *
$str
ŒŒ+ =
)
ŒŒ= >
;
ŒŒ> ?
foreach
–– 
(
–– 
string
–– 
filePath
–– $
in
––% '
fileEntries
––( 3
)
––3 4
{
—— 
WeatherData
““ 
[
““ 
]
““ 
cityWeatherData
““ -
=
““. /
ReadCSV
““0 7
(
““7 8
filePath
““8 @
)
““@ A
;
““A B
string
‘‘ 
cityNameString
‘‘ %
=
‘‘& '
Path
’’ 
.
’’ )
GetFileNameWithoutExtension
’’ 0
(
’’0 1
filePath
’’1 9
)
’’9 :
.
÷÷ 
Replace
÷÷ 
(
÷÷ 
$str
÷÷ *
,
÷÷* +
$str
÷÷, .
)
÷÷. /
;
÷÷/ 0
if
ÿÿ 
(
ÿÿ 
!
ÿÿ 
Enum
ÿÿ 
.
ÿÿ 
TryParse
ÿÿ "
(
ÿÿ" #
cityNameString
ÿÿ# 1
,
ÿÿ1 2
out
ÿÿ3 6
CityName
ÿÿ7 ?
cityNameEnum
ÿÿ@ L
)
ÿÿL M
)
ÿÿM N
{
ŸŸ 
throw
⁄⁄ 
new
⁄⁄ 
FormatException
⁄⁄ -
(
⁄⁄- .
$str
€€ ,
+
€€- .
$"
‹‹ 
$str
‹‹ )
{
‹‹) *
cityNameString
‹‹* 8
}
‹‹8 9
$str
‹‹9 :
"
‹‹: ;
)
‹‹; <
;
‹‹< =
}
›› 
CityWeather
ﬂﬂ 
currentCity
ﬂﬂ '
=
ﬂﬂ( )
new
ﬂﬂ* -
(
ﬂﬂ- .
cityNameEnum
ﬂﬂ. :
,
ﬂﬂ: ;
cityWeatherData
ﬂﬂ< K
)
ﬂﬂK L
;
ﬂﬂL M
list
·· 
.
·· 
Add
·· 
(
·· 
currentCity
·· $
)
··$ %
;
··% &
}
‚‚ 
return
„„ 
list
„„ 
;
„„ 
}
‰‰ 	
}
ÂÂ 
}ÊÊ üª
-/home/alex/c#/SpaceProject/src/CityWeather.cs
	namespace 	
SpaceProject
 
. 
src 
{		 
public

 

enum

 
CityName

 
{ 
Kourou 
, 
Tanegashima 
, 
CapeCanaveral 
, 
Kodiak 
, 
Mahia 
, 
} 
public 

class 
CityWeather 
{ 
public 
CityName 
Name 
{ 
get "
;" #
set$ '
;' (
}) *
public 
WeatherData 
[ 
] 
WeatherDatas )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
public 
WeatherData 
? 
BestDayForLaunch ,
;, -
public 
CityWeather 
( 
CityName #
cityName$ ,
,, -
WeatherData. 9
[9 :
]: ;
weatherDatas< H
)H I
{ 	
this 
. 
Name 
= 
cityName  
;  !
this 
. 
WeatherDatas 
= 
weatherDatas  ,
;, -
} 	
public 
void 
	PrintData 
( 
) 
{ 	
var 
table 
= 
new 
ConsoleTable (
(( )
$str) .
,. /
$str0 B
,B C
$strD P
,P Q
$str   '
,  ' (
$str  ( ;
,  ; <
$str  < F
,  F G
$str  H P
)  P Q
;  Q R
foreach"" 
("" 
var"" 
day"" 
in"" 
WeatherDatas"" +
)""+ ,
{## 
table$$ 
.$$ 
AddRow$$ 
($$ 
day$$  
.$$  !
Day$$! $
,$$$ %
day$$& )
.$$) *
Temperature$$* 5
,$$5 6
day$$7 :
.$$: ;
Wind$$; ?
,$$? @
day$$A D
.$$D E
Humidity$$E M
,$$M N
day%% 
.%% 
Precipitation%% "
,%%" #
day%%$ '
.%%' (
Lighting%%( 0
,%%0 1
day%%2 5
.%%5 6
Clouds%%6 <
)%%< =
;%%= >
}&& 
System(( 
.(( 
Console(( 
.(( 
	WriteLine(( $
((($ %
$"((% '
$str((' )
{(() *
Name((* .
}((. /
$str((/ ?
"((? @
)((@ A
;((A B
table)) 
.)) 
Write)) 
()) 
))) 
;)) 
}** 	
public,, 
WeatherData,, 
?,,  
FindBestDayForLaunch,, 0
(,,0 1
out,,1 4
string,,5 ;
leadCondition,,< I
),,I J
{-- 	
List.. 
<.. 
WeatherData.. 
>.. 
goodDays.. &
=..' (
new..) ,
List..- 1
<..1 2
WeatherData..2 =
>..= >
(..> ?
)..? @
;..@ A
foreach// 
(// 
var// 
day// 
in// 
WeatherDatas//  ,
)//, -
{00 
if11 
(11 
day11 
.11 
Precipitation11 %
>11& '
WeatherData11( 3
.113 4!
PrecipitationCriteria114 I
||11J L
day22 
.22 
Lighting22  
==22! #
true22$ (
||22) +
day33 
.33 
Humidity33  
>=33! #
WeatherData33$ /
.33/ 0
HumidityCriteria330 @
||33A C
day44 
.44 
Wind44 
>44 
WeatherData44 *
.44* +
WindCriteria44+ 7
||448 :
day55 
.55 
Clouds55 
==55 !

CloudCover55" ,
.55, -
Cumulus55- 4
||555 7
day66 
.66 
Clouds66 
==66 !

CloudCover66" ,
.66, -
Nimbus66- 3
||664 6
day77 
.77 
Temperature77 #
<77$ %
WeatherData77& 1
.771 2"
MinTemperatureCriteria772 H
||77I K
day88 
.88 
Temperature88 #
>88$ %
WeatherData88& 1
.881 2"
MaxTemperatureCriteria882 H
)88H I
continue88J R
;88R S
goodDays:: 
.:: 
Add:: 
(:: 
day::  
)::  !
;::! "
};; 
if== 
(== 
goodDays== 
.== 
Count== 
==== !
$num==" #
)==# $
{>> 
leadCondition?? 
=?? 
string??  &
.??& '
Empty??' ,
;??, -
return@@ 
null@@ 
;@@ 
}AA 
ifBB 
(BB 
goodDaysBB 
.BB 
CountBB 
==BB !
$numBB" #
)BB# $
{CC 
leadConditionDD 
=DD 
$strDD  @
;DD@ A
BestDayForLaunchEE  
=EE! "
goodDaysEE# +
.EE+ ,
FirstEE, 1
(EE1 2
)EE2 3
;EE3 4
returnFF 
goodDaysFF 
.FF  
FirstFF  %
(FF% &
)FF& '
;FF' (
}GG 
varII 
OrderedByWindArrayII "
=II# $
goodDaysJJ 
.JJ 
OrderByJJ 
(JJ 
dayJJ  
=>JJ! #
dayJJ$ '
.JJ' (
WindJJ( ,
)JJ, -
.JJ- .
ToArrayJJ. 5
(JJ5 6
)JJ6 7
;JJ7 8
ifLL 
(LL 
OrderedByWindArrayLL "
[LL" #
$numLL# $
]LL$ %
.LL% &
WindLL& *
!=LL+ -
OrderedByWindArrayLL. @
[LL@ A
$numLLA B
]LLB C
.LLC D
WindLLD H
)LLH I
{MM 
leadConditionNN 
=NN 
$strNN  B
+NNC D
$strOO  9
;OO9 :
BestDayForLaunchPP  
=PP! "
OrderedByWindArrayPP# 5
[PP5 6
$numPP6 7
]PP7 8
;PP8 9
returnQQ 
OrderedByWindArrayQQ )
[QQ) *
$numQQ* +
]QQ+ ,
;QQ, -
}RR 
varTT 
FirstByHumidityDayTT "
=TT# $
OrderedByWindArrayTT% 7
.TT7 8
WhereTT8 =
(TT= >
dayUU 
=>UU 
dayUU 
.UU 
WindUU 
==UU  "
OrderedByWindArrayUU# 5
.UU5 6
FirstUU6 ;
(UU; <
)UU< =
.UU= >
WindUU> B
)UUB C
.UUC D
OrderByUUD K
(UUK L
dayVV 
=>VV 
dayVV 
.VV 
HumidityVV '
)VV' (
.VV( )
FirstVV) .
(VV. /
)VV/ 0
;VV0 1
leadConditionXX 
=XX 
$strXX J
;XXJ K
BestDayForLaunchYY 
=YY 
FirstByHumidityDayYY 1
;YY1 2
returnZZ 
FirstByHumidityDayZZ %
;ZZ% &
}[[ 	
public]] 
static]] 
CityWeather]] !
?]]! "
FindBestLocation]]# 3
(]]3 4
List]]4 8
<]]8 9
CityWeather]]9 D
>]]D E
cities]]F L
,]]L M
out]]N Q
string]]R X
leadCondition]]Y f
)]]f g
{^^ 	
cities__ 
.__ 
	RemoveAll__ 
(__ 
city__ !
=>__" $
city__% )
.__) *
BestDayForLaunch__* :
==__; =
null__> B
)__B C
;__C D
ifaa 
(aa 
citiesaa 
.aa 
Countaa 
==aa 
$numaa  !
)aa! "
{bb 
leadConditioncc 
=cc 
stringcc  &
.cc& '
Emptycc' ,
;cc, -
returndd 
nulldd 
;dd 
}ee 
varhh 
OrderedByWindArrayhh "
=hh# $
citiesii 
.ii 
OrderByii 
(ii 
cityii #
=>ii$ &
cityii' +
.ii+ ,
BestDayForLaunchii, <
.ii< =
Windii= A
)iiA B
.iiB C
ToArrayiiC J
(iiJ K
)iiK L
;iiL M
ifkk 
(kk 
OrderedByWindArraykk "
.kk" #
Lengthkk# )
==kk* ,
$numkk- .
)kk. /
{ll 
leadConditionmm 
=mm 
$"mm  "
$strmm" +
{mm+ ,
OrderedByWindArraymm, >
[mm> ?
$nummm? @
]mm@ A
.mmA B
NamemmB F
}mmF G
$strmmG H
"mmH I
+mmJ K
$strnn  C
+nnD E
$"oo  "
{oo" #
OrderedByWindArrayoo# 5
[oo5 6
$numoo6 7
]oo7 8
.oo8 9
BestDayForLaunchoo9 I
.ooI J
DayooJ M
}ooM N
$strooN P
"ooP Q
+ooR S
$strpp  9
;pp9 :
returnqq 
OrderedByWindArrayqq )
[qq) *
$numqq* +
]qq+ ,
;qq, -
}rr 
iftt 
(tt 
OrderedByWindArraytt "
[tt" #
$numtt# $
]tt$ %
.tt% &
BestDayForLaunchtt& 6
.tt6 7
Windtt7 ;
!=tt< >
OrderedByWindArrayuu "
[uu" #
$numuu# $
]uu$ %
.uu% &
BestDayForLaunchuu& 6
.uu6 7
Winduu7 ;
)uu; <
{vv 
leadConditionww 
=ww 
$"ww  "
$strww" +
{ww+ ,
OrderedByWindArrayww, >
[ww> ?
$numww? @
]ww@ A
.wwA B
NamewwB F
}wwF G
$strwwG H
"wwH I
+wwJ K
$strxx  C
+xxD E
$"yy  "
{yy" #
OrderedByWindArrayyy# 5
[yy5 6
$numyy6 7
]yy7 8
.yy8 9
BestDayForLaunchyy9 I
.yyI J
DayyyJ M
}yyM N
$stryyN P
"yyP Q
+yyR S
$strzz  9
;zz9 :
return{{ 
OrderedByWindArray{{ )
[{{) *
$num{{* +
]{{+ ,
;{{, -
}|| 
var~~ "
OrderedByHumidityArray~~ &
=~~' (
OrderedByWindArray~~) ;
.~~; <
Where~~< A
(~~A B
city) -
=>. 0
city1 5
.5 6
BestDayForLaunch6 F
.F G
WindG K
==L N 
OrderedByWindArray
ÄÄ) ;
.
ÄÄ; <
First
ÄÄ< A
(
ÄÄA B
)
ÄÄB C
.
ÄÄC D
BestDayForLaunch
ÄÄD T
.
ÄÄT U
Wind
ÄÄU Y
)
ÄÄY Z
.
ÅÅ) *
OrderBy
ÅÅ* 1
(
ÅÅ1 2
city
ÅÅ2 6
=>
ÅÅ7 9
city
ÇÇ) -
.
ÇÇ- .
BestDayForLaunch
ÇÇ. >
.
ÇÇ> ?
Humidity
ÇÇ? G
)
ÇÇG H
.
ÇÇH I
ToArray
ÇÇI P
(
ÇÇP Q
)
ÇÇQ R
;
ÇÇR S
if
ÑÑ 
(
ÑÑ $
OrderedByHumidityArray
ÑÑ &
[
ÑÑ& '
$num
ÑÑ' (
]
ÑÑ( )
.
ÑÑ) *
BestDayForLaunch
ÑÑ* :
.
ÑÑ: ;
Humidity
ÑÑ; C
!=
ÑÑD F$
OrderedByHumidityArray
ÖÖ &
[
ÖÖ& '
$num
ÖÖ' (
]
ÖÖ( )
.
ÖÖ) *
BestDayForLaunch
ÖÖ* :
.
ÖÖ: ;
Humidity
ÖÖ; C
)
ÖÖC D
{
ÜÜ 
leadCondition
áá 
=
áá 
$"
áá  "
$str
áá" +
{
áá+ ,$
OrderedByHumidityArray
áá, B
[
ááB C
$num
ááC D
]
ááD E
.
ááE F
Name
ááF J
}
ááJ K
$str
ááK P
"
ááP Q
+
ááR S
$str
àà  L
+
ààM N
$"
ââ  "
{
ââ" #$
OrderedByHumidityArray
ââ# 9
[
ââ9 :
$num
ââ: ;
]
ââ; <
.
ââ< =
BestDayForLaunch
ââ= M
.
ââM N
Day
ââN Q
}
ââQ R
$str
ââR S
"
ââS T
;
ââT U
return
ää $
OrderedByHumidityArray
ää -
[
ää- .
$num
ää. /
]
ää/ 0
;
ää0 1
}
ãã 
var
çç %
FirstByClosestToEquator
çç '
=
çç( )$
OrderedByHumidityArray
çç* @
.
çç@ A
Where
ççA F
(
ççF G
city
éé  $
=>
éé% '
city
éé( ,
.
éé, -
BestDayForLaunch
éé- =
.
éé= >
Humidity
éé> F
==
ééG I$
OrderedByHumidityArray
èè  6
.
èè6 7
First
èè7 <
(
èè< =
)
èè= >
.
èè> ?
BestDayForLaunch
èè? O
.
èèO P
Humidity
èèP X
)
èèX Y
.
êê  !
OrderBy
êê! (
(
êê( )
city
êê) -
=>
êê. 0
city
êê1 5
.
êê5 6
Name
êê6 :
)
êê: ;
.
êê; <
First
êê< A
(
êêA B
)
êêB C
;
êêC D
leadCondition
íí 
=
íí 
$"
íí 
$str
íí '
{
íí' (%
FirstByClosestToEquator
íí( ?
.
íí? @
Name
íí@ D
}
ííD E
$str
ííE J
"
ííJ K
+
ííL M
$str
ìì H
+
ììI J
$"
îî 
{
îî $
OrderedByHumidityArray
îî 5
[
îî5 6
$num
îî6 7
]
îî7 8
.
îî8 9
BestDayForLaunch
îî9 I
.
îîI J
Day
îîJ M
}
îîM N
$str
îîN O
"
îîO P
+
îîQ R
$str
ïï <
;
ïï< =
return
ññ %
FirstByClosestToEquator
ññ *
;
ññ* +
}
òò 	
public
öö 
static
öö 
void
öö !
ExportBestDateToCSV
öö .
(
öö. /
List
öö/ 3
<
öö3 4
CityWeather
öö4 ?
>
öö? @
cities
ööA G
,
ööG H
out
ööI L
string
ööM S
filePath
ööT \
)
öö\ ]
{
õõ 	
string
úú 
currentDirectory
úú #
=
úú$ %
	Directory
úú& /
.
úú/ 0!
GetCurrentDirectory
úú0 C
(
úúC D
)
úúD E
;
úúE F
filePath
ùù 
=
ùù 
$"
ùù 
{
ùù 
currentDirectory
ùù *
}
ùù* +
$str
ùù+ D
"
ùùD E
;
ùùE F
using
†† 
(
†† 
StreamWriter
†† 
writer
††  &
=
††' (
new
††) ,
StreamWriter
††- 9
(
††9 :
filePath
††: B
,
††B C
false
††D I
,
††I J
Encoding
††K S
.
††S T
UTF8
††T X
)
††X Y
)
††Y Z
{
°° 
writer
££ 
.
££ 
	WriteLine
££  
(
££  !
$str
££! I
)
££I J
;
££J K
for
ßß 
(
ßß 
int
ßß 
i
ßß 
=
ßß 
$num
ßß 
;
ßß 
i
ßß  !
<
ßß" #
cities
ßß$ *
.
ßß* +
Count
ßß+ 0
;
ßß0 1
i
ßß2 3
++
ßß3 5
)
ßß5 6
{
®® 
if
©© 
(
©© 
cities
©© 
[
©© 
i
©©  
]
©©  !
.
©©! "
BestDayForLaunch
©©" 2
!=
©©3 5
null
©©6 :
)
©©: ;
writer
™™ 
.
™™ 
	WriteLine
™™ (
(
™™( )
$"
™™) +
$str
™™+ -
{
™™- .
cities
™™. 4
[
™™4 5
i
™™5 6
]
™™6 7
.
™™7 8
Name
™™8 <
}
™™< =
$str
™™= A
{
™™A B
cities
™™B H
[
™™H I
i
™™I J
]
™™J K
.
™™K L
BestDayForLaunch
™™L \
.
™™\ ]
Day
™™] `
}
™™` a
"
™™a b
)
™™b c
;
™™c d
else
´´ 
writer
¨¨ 
.
¨¨ 
	WriteLine
¨¨ (
(
¨¨( )
$"
¨¨) +
$str
¨¨+ -
{
¨¨- .
cities
¨¨. 4
[
¨¨4 5
i
¨¨5 6
]
¨¨6 7
.
¨¨7 8
Name
¨¨8 <
}
¨¨< =
$str
¨¨= _
"
¨¨_ `
)
¨¨` a
;
¨¨a b
}
≠≠ 
}
ÆÆ 
Console
ØØ 
.
ØØ 
	WriteLine
ØØ 
(
ØØ 
$"
ØØ  
$str
ØØ  *
{
ØØ* +
filePath
ØØ+ 3
}
ØØ3 4
$str
ØØ4 T
"
ØØT U
)
ØØU V
;
ØØV W
}
±± 	
public
≥≥ 
static
≥≥ 
void
≥≥ 
SendDataToMail
≥≥ )
(
≥≥) *
List
≥≥* .
<
≥≥. /
CityWeather
≥≥/ :
>
≥≥: ;
cities
≥≥< B
,
≥≥B C
CityWeather
¥¥* 5
bestLocation
¥¥6 B
,
¥¥B C
string
¥¥D J
filePath
¥¥K S
)
¥¥S T
{
µµ 	
if
∂∂ 
(
∂∂ 
bestLocation
∂∂ 
.
∂∂ 
BestDayForLaunch
∂∂ -
==
∂∂. 0
null
∂∂1 5
)
∂∂5 6
throw
∑∑ 
new
∑∑ 
ArgumentException
∑∑ +
(
∑∑+ ,
$str
∑∑, V
)
∑∑V W
;
∑∑W X
System
ππ 
.
ππ 
Console
ππ 
.
ππ 
	WriteLine
ππ $
(
ππ$ %
$str
ππ% `
+
ππa b
$str
∫∫ H
)
∫∫H I
;
∫∫I J
System
ºº 
.
ºº 
Console
ºº 
.
ºº 
	WriteLine
ºº $
(
ºº$ %
$str
ºº% ;
)
ºº; <
;
ºº< =
string
ΩΩ 
senderEmail
ΩΩ 
=
ΩΩ  
System
ΩΩ! '
.
ΩΩ' (
Console
ΩΩ( /
.
ΩΩ/ 0
ReadLine
ΩΩ0 8
(
ΩΩ8 9
)
ΩΩ9 :
??
ΩΩ; =
throw
ææ 
new
ææ 
ArgumentException
ææ +
(
ææ+ ,
$str
ææ, N
)
ææN O
;
ææO P
string
¿¿ 
pattern
¿¿ 
=
¿¿ 
$str
¿¿ .
;
¿¿. /
Regex
¡¡ 
regex
¡¡ 
=
¡¡ 
new
¡¡ 
Regex
¡¡ #
(
¡¡# $
pattern
¡¡$ +
)
¡¡+ ,
;
¡¡, -
bool
¬¬ 
isMatch
¬¬ 
=
¬¬ 
regex
¬¬  
.
¬¬  !
IsMatch
¬¬! (
(
¬¬( )
senderEmail
¬¬) 4
)
¬¬4 5
;
¬¬5 6
if
√√ 
(
√√ 
!
√√ 
isMatch
√√ 
)
√√ 
throw
√√ 
new
√√  #
ArgumentException
√√$ 5
(
√√5 6
$str
√√6 U
)
√√U V
;
√√V W
SecureString
∆∆ 
	securePwd
∆∆ "
=
∆∆# $
new
∆∆% (
SecureString
∆∆) 5
(
∆∆5 6
)
∆∆6 7
;
∆∆7 8
ConsoleKeyInfo
«« 
key
«« 
;
«« 
Console
…… 
.
…… 
Write
…… 
(
…… 
$str
…… ,
)
……, -
;
……- .
do
   
{
ÀÀ 
key
ÃÃ 
=
ÃÃ 
Console
ÃÃ 
.
ÃÃ 
ReadKey
ÃÃ %
(
ÃÃ% &
true
ÃÃ& *
)
ÃÃ* +
;
ÃÃ+ ,
	securePwd
œœ 
.
œœ 

AppendChar
œœ $
(
œœ$ %
key
œœ% (
.
œœ( )
KeyChar
œœ) 0
)
œœ0 1
;
œœ1 2
Console
–– 
.
–– 
Write
–– 
(
–– 
$str
–– !
)
––! "
;
––" #
}
”” 
while
”” 
(
”” 
key
”” 
.
”” 
Key
”” 
!=
”” 

ConsoleKey
””  *
.
””* +
Enter
””+ 0
)
””0 1
;
””1 2
	securePwd
’’ 
.
’’ 
MakeReadOnly
’’ "
(
’’" #
)
’’# $
;
’’$ %

SmtpClient
ÿÿ 
client
ÿÿ 
=
ÿÿ 
new
ÿÿ  #

SmtpClient
ÿÿ$ .
(
ÿÿ. /
$str
ÿÿ/ F
)
ÿÿF G
;
ÿÿG H
client
ŸŸ 
.
ŸŸ 
Port
ŸŸ 
=
ŸŸ 
$num
ŸŸ 
;
ŸŸ 
client
⁄⁄ 
.
⁄⁄ #
UseDefaultCredentials
⁄⁄ (
=
⁄⁄) *
false
⁄⁄+ 0
;
⁄⁄0 1
client
€€ 
.
€€ 
	EnableSsl
€€ 
=
€€ 
true
€€ #
;
€€# $
client
‹‹ 
.
‹‹ 
Credentials
‹‹ 
=
‹‹  
new
‹‹! $
NetworkCredential
‹‹% 6
(
‹‹6 7
senderEmail
‹‹7 B
,
‹‹B C
	securePwd
‹‹D M
)
‹‹M N
;
‹‹N O
	securePwd
›› 
.
›› 
Dispose
›› 
(
›› 
)
›› 
;
››  
System
ﬁﬁ 
.
ﬁﬁ 
Console
ﬁﬁ 
.
ﬁﬁ 
	WriteLine
ﬁﬁ $
(
ﬁﬁ$ %
)
ﬁﬁ% &
;
ﬁﬁ& '
System
ﬂﬂ 
.
ﬂﬂ 
Console
ﬂﬂ 
.
ﬂﬂ 
	WriteLine
ﬂﬂ $
(
ﬂﬂ$ %
$str
ﬂﬂ% 7
)
ﬂﬂ7 8
;
ﬂﬂ8 9
string
‡‡ 
receiverEmail
‡‡  
=
‡‡! "
System
‡‡# )
.
‡‡) *
Console
‡‡* 1
.
‡‡1 2
ReadLine
‡‡2 :
(
‡‡: ;
)
‡‡; <
??
‡‡= ?
throw
·· 
new
·· 
ArgumentException
·· +
(
··+ ,
$str
··, P
)
··P Q
;
··Q R
MailMessage
‰‰ 
mail
‰‰ 
=
‰‰ 
new
‰‰ "
MailMessage
‰‰# .
(
‰‰. /
senderEmail
‰‰/ :
,
‰‰: ;
receiverEmail
‰‰< I
)
‰‰I J
;
‰‰J K
mail
ÂÂ 
.
ÂÂ 
Subject
ÂÂ 
=
ÂÂ 
$str
ÂÂ A
;
ÂÂA B
mail
ÊÊ 
.
ÊÊ 
Body
ÊÊ 
=
ÊÊ 
$"
ÊÊ 
$str
ÊÊ 6
{
ÊÊ6 7
bestLocation
ÊÊ7 C
.
ÊÊC D
Name
ÊÊD H
}
ÊÊH I
$str
ÊÊI J
"
ÊÊJ K
+
ÊÊL M
$"
ÁÁ 
$str
ÁÁ !
{
ÁÁ! "
bestLocation
ÁÁ" .
.
ÁÁ. /
BestDayForLaunch
ÁÁ/ ?
.
ÁÁ? @
Day
ÁÁ@ C
}
ÁÁC D
$str
ÁÁD E
"
ÁÁE F
;
ÁÁF G
mail
ËË 
.
ËË 

IsBodyHtml
ËË 
=
ËË 
false
ËË #
;
ËË# $

Attachment
ÎÎ 

attachment
ÎÎ !
=
ÎÎ" #
new
ÎÎ$ '

Attachment
ÎÎ( 2
(
ÎÎ2 3
filePath
ÎÎ3 ;
)
ÎÎ; <
;
ÎÎ< =
mail
ÏÏ 
.
ÏÏ 
Attachments
ÏÏ 
.
ÏÏ 
Add
ÏÏ  
(
ÏÏ  !

attachment
ÏÏ! +
)
ÏÏ+ ,
;
ÏÏ, -
client
ÔÔ 
.
ÔÔ 
Send
ÔÔ 
(
ÔÔ 
mail
ÔÔ 
)
ÔÔ 
;
ÔÔ 
Console
ÒÒ 
.
ÒÒ 
	WriteLine
ÒÒ 
(
ÒÒ 
$str
ÒÒ :
)
ÒÒ: ;
;
ÒÒ; <
}
ÚÚ 	
}
ÛÛ 
}ÙÙ ÌP
%/home/alex/c#/SpaceProject/Program.cs
System 
. 
Console 
. 
	WriteLine 
( 
$str J
+K L
$str N
+O P
$str J
+K L
$str A
+B C
$str w
+x y
$str h
)h i
;i j
while

 
(

 
true

 
)

 
{ 
try 
{ 
System 
. 
Console 
. 
	WriteLine  
(  !
$str! [
)[ \
;\ ]
string 
filePath 
= 
string  
.  !
Empty! &
;& '
filePath 
= 
System 
. 
Console !
.! "
ReadLine" *
(* +
)+ ,
??- /
throw	 
new 
ArgumentException $
($ %
$str% F
)F G
;G H
System 
. 
Console 
. 
	WriteLine  
(  !
$str! p
)p q
;q r
string 
choice 
= 
System 
. 
Console &
.& '
ReadLine' /
(/ 0
)0 1
??2 4
$str5 8
;8 9
if 

( 
choice 
. 
ToLower 
( 
) 
. 
Equals #
(# $
$str$ '
)' (
)( )
{ 	
System 
. 
Console 
. 
	WriteLine $
($ %
$str% Y
)Y Z
;Z [
System 
. 
Console 
. 
	WriteLine $
($ %
$str% <
)< =
;= >
WeatherData 
. "
MaxTemperatureCriteria .
=/ 0
Convert1 8
.8 9
ToDouble9 A
(A B
SystemB H
.H I
ConsoleI P
.P Q
ReadLineQ Y
(Y Z
)Z [
??\ ^
throw 
new 
ArgumentException '
(' (
$str( F
)F G
)G H
;H I
System 
. 
Console 
. 
	WriteLine $
($ %
$str% <
)< =
;= >
WeatherData 
. "
MinTemperatureCriteria .
=/ 0
Convert1 8
.8 9
ToDouble9 A
(A B
SystemB H
.H I
ConsoleI P
.P Q
ReadLineQ Y
(Y Z
)Z [
??\ ^
throw   
new   
ArgumentException   '
(  ' (
$str  ( F
)  F G
)  G H
;  H I
System"" 
."" 
Console"" 
."" 
	WriteLine"" $
(""$ %
$str""% B
)""B C
;""C D
WeatherData## 
.## 
WindCriteria## $
=##% &
Convert##' .
.##. /
ToDouble##/ 7
(##7 8
System##8 >
.##> ?
Console##? F
.##F G
ReadLine##G O
(##O P
)##P Q
??##R T
throw$$ 
new$$ 
ArgumentException$$ '
($$' (
$str$$( F
)$$F G
)$$G H
;$$H I
System&& 
.&& 
Console&& 
.&& 
	WriteLine&& $
(&&$ %
$str&&% =
)&&= >
;&&> ?
WeatherData'' 
.'' 
HumidityCriteria'' (
='') *
Convert''+ 2
.''2 3
ToDouble''3 ;
(''; <
System''< B
.''B C
Console''C J
.''J K
ReadLine''K S
(''S T
)''T U
??''V X
throw(( 
new(( 
ArgumentException(( '
(((' (
$str((( F
)((F G
)((G H
;((H I
System** 
.** 
Console** 
.** 
	WriteLine** $
(**$ %
$str**% C
)**C D
;**D E
WeatherData++ 
.++ !
PrecipitationCriteria++ -
=++. /
Convert++0 7
.++7 8
ToDouble++8 @
(++@ A
System++A G
.++G H
Console++H O
.++O P
ReadLine++P X
(++X Y
)++Y Z
??++[ ]
throw,, 
new,, 
ArgumentException,, '
(,,' (
$str,,( F
),,F G
),,G H
;,,H I
}-- 	
else.. 
WeatherData.. 
...  
SetCriteriaToDefault.. -
(..- .
)... /
;../ 0
var00 
cityList00 
=00 
new00 
List00 
<00  
CityWeather00  +
>00+ ,
(00, -
)00- .
;00. /
cityList11 
=11 

DataReader11 
.11 
LoadDataFromFolder11 0
(110 1
filePath111 9
)119 :
;11: ;
string22 
reason22 
;22 
foreach44 
(44 
var44 
city44 
in44 
cityList44 %
)44% &
{55 	
city66 
.66 
	PrintData66 
(66 
)66 
;66 
var77 
bestDay77 
=77 
city77 
.77  
FindBestDayForLaunch77 3
(773 4
out774 7
reason778 >
)77> ?
;77? @
if88 
(88 
bestDay88 
!=88 
null88 
)88  
{99 
System:: 
.:: 
Console:: 
.:: 
	WriteLine:: (
(::( )
$"::) +
$str::+ E
{::E F
city::F J
.::J K
Name::K O
}::O P
$str::P Q
"::Q R
+::S T
$";; 
$str;; 
{;; 
bestDay;; !
.;;! "
Day;;" %
};;% &
$str;;& 1
{;;1 2
reason;;2 8
};;8 9
$str;;9 ;
";;; <
);;< =
;;;= >
}<< 
else== 
System>> 
.>> 
Console>> 
.>> 
	WriteLine>> (
(>>( )
$">>) +
$str>>+ 2
{>>2 3
city>>3 7
.>>7 8
Name>>8 <
}>>< =
$str>>= E
">>E F
+>>G H
$str?? @
)??@ A
;??A B
}@@ 	
varBB 
bestCityLocationBB 
=BB 
CityWeatherBB *
.BB* +
FindBestLocationBB+ ;
(BB; <
cityListBB< D
,BBD E
outBBF I
reasonBBJ P
)BBP Q
;BBQ R
SystemCC 
.CC 
ConsoleCC 
.CC 
	WriteLineCC  
(CC  !
$strCC! Q
+CCR S
$strDD  Q
)DDQ R
;DDR S
ifEE 

(EE 
bestCityLocationEE 
!=EE 
nullEE  $
)EE$ %
SystemFF 
.FF 
ConsoleFF 
.FF 
	WriteLineFF $
(FF$ %
$"FF% '
$strFF' C
"FFC D
+FFE F
$"GG 
{GG 
bestCityLocationGG 
.GG  
NameGG  $
}GG$ %
$strGG% 0
{GG0 1
reasonGG1 7
}GG7 8
$strGG8 :
"GG: ;
)GG; <
;GG< =
elseHH 
SystemHH 
.HH 
ConsoleHH 
.HH 
	WriteLineHH %
(HH% &
$strHH& R
)HHR S
;HHS T
SystemII 
.II 
ConsoleII 
.II 
	WriteLineII  
(II  !
$strII! Q
+IIR S
$strJJ  Q
)JJQ R
;JJR S
CityWeatherLL 
.LL 
ExportBestDateToCSVLL '
(LL' (
cityListLL( 0
,LL0 1
outLL2 5
stringLL6 <
exportFilePathLL= K
)LLK L
;LLL M
ifNN 

(NN 
bestCityLocationNN 
!=NN 
nullNN  $
)NN$ %
{OO 	
SystemPP 
.PP 
ConsolePP 
.PP 
	WriteLinePP $
(PP$ %
$strPP% g
)PPg h
;PPh i
stringQQ 

mailChoiceQQ 
=QQ 
SystemQQ  &
.QQ& '
ConsoleQQ' .
.QQ. /
ReadLineQQ/ 7
(QQ7 8
)QQ8 9
??QQ: <
$strQQ= @
;QQ@ A
ifRR 
(RR 

mailChoiceRR 
.RR 
ToLowerRR "
(RR" #
)RR# $
.RR$ %
EqualsRR% +
(RR+ ,
$strRR, /
)RR/ 0
)RR0 1
CityWeatherSS 
.SS 
SendDataToMailSS *
(SS* +
cityListSS+ 3
,SS3 4
bestCityLocationSS5 E
,SSE F
exportFilePathSSG U
)SSU V
;SSV W
}TT 	
SystemVV 
.VV 
ConsoleVV 
.VV 
	WriteLineVV  
(VV  !
$strVV! 2
)VV2 3
;VV3 4
stringWW 

exitChoiceWW 
=WW 
SystemWW "
.WW" #
ConsoleWW# *
.WW* +
ReadLineWW+ 3
(WW3 4
)WW4 5
??WW6 8
$strWW9 <
;WW< =
ifXX 

(XX 

exitChoiceXX 
.XX 
ToLowerXX 
(XX 
)XX  
.XX  !
EqualsXX! '
(XX' (
$strXX( +
)XX+ ,
)XX, -
breakXX. 3
;XX3 4
}YY 
catchZZ 	
(ZZ
 
	ExceptionZZ 
exZZ 
)ZZ 
{[[ 
Console\\ 
.\\ 
	WriteLine\\ 
(\\ 
ex\\ 
.\\ 
Message\\ $
+\\% &
$str\\' +
)\\+ ,
;\\, -
}]] 
}^^ 