ıd
-/home/alex/c#/SpaceProject/src/WeatherData.cs
	namespace 	
SpaceProject
 
. 
src 
{ 
public 

enum 

CloudCover 
{ 
Cumulus 
, 
Stratus 
, 
Stratocumulus 
, 
Cumulonimbus		 
,		 
Nimbus

 
,

 
Altocumulus 
, 
Altostratus 
, 
Cirrus 
, 
Cirrostratus 
, 
Cirrocumulus 
, 
Default 
} 
public 

class 
WeatherData 
{ 
private 
int 
_day 
= 
$num 
; 
private 
double 
_temperature #
=$ %
$num& '
;' (
private 
double 
_wind 
= 
$num  
;  !
private 
double 
	_humidity  
=! "
$num# $
;$ %
private 
double 
_precipitation %
=& '
$num( )
;) *
public 
bool 
Lighting 
{ 
get "
;" #
set$ '
;' (
}) *
=+ ,
false- 2
;2 3
public 

CloudCover 
Clouds  
{! "
get# &
;& '
set( +
;+ ,
}- .
=/ 0

CloudCover1 ;
.; <
Default< C
;C D
private 
static 
double #
_minTemperatureCriteria 5
=6 7
$num8 9
;9 :
private 
static 
double #
_maxTemperatureCriteria 5
=6 7
$num8 :
;: ;
private 
static 
double 
_windCriteria +
=, -
$num. 0
;0 1
private 
static 
double "
_precipitationCriteria 4
=5 6
$num7 8
;8 9
private 
static 
double 
_humidityCriteria /
=0 1
$num2 4
;4 5
public   
int   
Day   
{!! 	
get"" 
{"" 
return"" 
_day"" 
;"" 
}""  
set## 
{$$ 
if%% 
(%% 
value%% 
<%% 
$num%% 
||%%  
value%%! &
>%%' (
$num%%) +
)%%+ ,
throw&& 
new&& 
ArgumentException&& /
(&&/ 0
$str&&0 G
+&&H I
$"''0 2
$str''2 7
{''7 8
value''8 =
}''= >
"''> ?
)''? @
;''@ A
_day(( 
=(( 
value(( 
;(( 
})) 
}** 	
public++ 
double++ 
Temperature++ !
{,, 	
get-- 
{-- 
return-- 
_temperature-- %
;--% &
}--' (
set.. 
{// 
if00 
(00 
value00 
<00 
-00 
$num00 
||00  "
value00# (
>00) *
$num00+ -
)00- .
throw11 
new11 
ArgumentException11 /
(11/ 0
$str110 G
+11H I
$"220 2
$str222 ?
{22? @
value22@ E
}22E F
"22F G
)22G H
;22H I
_temperature33 
=33 
value33 $
;33$ %
}44 
}55 	
public66 
double66 
Wind66 
{77 	
get88 
{88 
return88 
_wind88 
;88 
}88  !
set99 
{:: 
if;; 
(;; 
value;; 
<;; 
$num;; 
||;;  
value;;! &
>;;' (
$num;;) +
);;+ ,
throw<< 
new<< 
ArgumentException<< /
(<</ 0
$str<<0 G
+<<H I
$"==0 2
$str==2 E
{==E F
value==F K
}==K L
"==L M
)==M N
;==N O
_wind>> 
=>> 
value>> 
;>> 
}?? 
}@@ 	
publicAA 
doubleAA 
HumidityAA 
{BB 	
getCC 
{CC 
returnCC 
	_humidityCC "
;CC" #
}CC$ %
setDD 
{EE 
ifFF 
(FF 
valueFF 
<FF 
$numFF 
||FF  
valueFF! &
>FF' (
$numFF) ,
)FF, -
throwGG 
newGG 
ArgumentExceptionGG /
(GG/ 0
$strGG0 G
+GGH I
$"HH0 2
$strHH2 A
{HHA B
valueHHB G
}HHG H
"HHH I
)HHI J
;HHJ K
	_humidityII 
=II 
valueII !
;II! "
}JJ 
}KK 	
publicLL 
doubleLL 
PrecipitationLL #
{MM 	
getNN 
{NN 
returnNN 
_precipitationNN '
;NN' (
}NN) *
setOO 
{PP 
ifQQ 
(QQ 
valueQQ 
<QQ 
$numQQ 
||QQ  
valueQQ! &
>QQ' (
$numQQ) ,
)QQ, -
throwRR 
newRR 
ArgumentExceptionRR /
(RR/ 0
$strRR0 G
+RRH I
$"SS0 2
$strSS2 F
{SSF G
valueSSG L
}SSL M
"SSM N
)SSN O
;SSO P
_precipitationTT 
=TT  
valueTT! &
;TT& '
}UU 
}VV 	
publicWW 
staticWW 
doubleWW "
MinTemperatureCriteriaWW 3
{XX 	
getYY 
{YY 
returnYY #
_minTemperatureCriteriaYY 0
;YY0 1
}YY2 3
setZZ 
{[[ 
if\\ 
(\\ 
value\\ 
<\\ 
-\\ 
$num\\ 
||\\  "
value\\# (
>\\) *
$num\\+ -
)\\- .
throw]] 
new]] 
ArgumentException]] /
(]]/ 0
$str]]0 G
+]]H I
$"^^0 2
$str^^2 P
{^^P Q
value^^Q V
}^^V W
"^^W X
)^^X Y
;^^Y Z
if__ 
(__ 
value__ 
>__ #
_maxTemperatureCriteria__ 3
)__3 4
throw`` 
new`` 
ArgumentException`` /
(``/ 0
$str``0 G
+``H I
$"aa0 2
$straa2 P
{aaP Q
valueaaQ V
}aaV W
"aaW X
+aaY Z
$strbb0 \
+bb] ^
$strcc0 R
+ccS T
$"dd0 2
$strdd2 3
{dd3 4#
_maxTemperatureCriteriadd4 K
}ddK L
$strddL M
"ddM N
)ddN O
;ddO P#
_minTemperatureCriteriaee '
=ee( )
valueee* /
;ee/ 0
}ff 
}gg 	
publichh 
statichh 
doublehh "
MaxTemperatureCriteriahh 3
{ii 	
getjj 
{jj 
returnjj #
_maxTemperatureCriteriajj 0
;jj0 1
}jj2 3
setkk 
{ll 
ifmm 
(mm 
valuemm 
<mm 
-mm 
$nummm 
||mm  "
valuemm# (
>mm) *
$nummm+ -
)mm- .
thrownn 
newnn 
ArgumentExceptionnn /
(nn/ 0
$strnn0 G
+nnH I
$"oo0 2
$stroo2 P
{ooP Q
valueooQ V
}ooV W
"ooW X
)ooX Y
;ooY Z
ifpp 
(pp 
valuepp 
<pp #
_minTemperatureCriteriapp 3
)pp3 4
throwqq 
newqq 
ArgumentExceptionqq /
(qq/ 0
$strqq0 G
+qqH I
$"rr0 2
$strrr2 P
{rrP Q
valuerrQ V
}rrV W
"rrW X
+rrY Z
$strss0 [
+ss\ ]
$strtt0 R
+ttS T
$"uu0 2
$struu2 3
{uu3 4#
_minTemperatureCriteriauu4 K
}uuK L
$struuL M
"uuM N
)uuN O
;uuO P#
_maxTemperatureCriteriavv '
=vv( )
valuevv* /
;vv/ 0
}ww 
}xx 	
publiczz 
staticzz 
doublezz 
WindCriteriazz )
{{{ 	
get|| 
{|| 
return|| 
_windCriteria|| &
;||& '
}||( )
set}} 
{~~ 
if 
( 
value 
< 
$num 
||  
value! &
>' (
$num) +
)+ ,
throw
ÄÄ 
new
ÄÄ 
ArgumentException
ÄÄ /
(
ÄÄ/ 0
$str
ÄÄ0 G
+
ÄÄH I
$"
ÅÅ0 2
$str
ÅÅ2 N
{
ÅÅN O
value
ÅÅO T
}
ÅÅT U
"
ÅÅU V
)
ÅÅV W
;
ÅÅW X
_windCriteria
ÇÇ 
=
ÇÇ 
value
ÇÇ  %
;
ÇÇ% &
}
ÉÉ 
}
ÑÑ 	
public
ÖÖ 
static
ÖÖ 
double
ÖÖ 
HumidityCriteria
ÖÖ -
{
ÜÜ 	
get
áá 
{
áá 
return
áá 
_humidityCriteria
áá *
;
áá* +
}
áá, -
set
àà 
{
ââ 
if
ää 
(
ää 
value
ää 
<
ää 
$num
ää 
||
ää  
value
ää! &
>
ää' (
$num
ää) ,
)
ää, -
throw
ãã 
new
ãã 
ArgumentException
ãã /
(
ãã/ 0
$str
ãã0 G
+
ããH I
$"
åå0 2
$str
åå2 J
{
ååJ K
value
ååK P
}
ååP Q
"
ååQ R
)
ååR S
;
ååS T
_humidityCriteria
çç !
=
çç" #
value
çç$ )
;
çç) *
}
éé 
}
èè 	
public
êê 
static
êê 
double
êê #
PrecipitationCriteria
êê 2
{
ëë 	
get
íí 
{
íí 
return
íí $
_precipitationCriteria
íí /
;
íí/ 0
}
íí1 2
set
ìì 
{
îî 
if
ïï 
(
ïï 
value
ïï 
<
ïï 
$num
ïï 
||
ïï  
value
ïï! &
>
ïï' (
$num
ïï) ,
)
ïï, -
throw
ññ 
new
ññ 
ArgumentException
ññ /
(
ññ/ 0
$str
ññ0 G
+
ññH I
$"
óó0 2
$str
óó2 F
{
óóF G
value
óóG L
}
óóL M
"
óóM N
)
óóN O
;
óóO P$
_precipitationCriteria
òò &
=
òò' (
value
òò) .
;
òò. /
}
ôô 
}
öö 	
public
úú 
override
úú 
string
úú 
ToString
úú '
(
úú' (
)
úú( )
{
ùù 	
return
ûû 
$"
ûû 
$str
ûû 
{
ûû 
Day
ûû 
}
ûû 
$str
ûû .
{
ûû. /
Temperature
ûû/ :
}
ûû: ;
$str
ûû; L
{
ûûL M
Wind
ûûM Q
}
ûûQ R
$str
ûûR X
"
ûûX Y
+
ûûZ [
$"
üü 
$str
üü 
{
üü 
Humidity
üü "
}
üü" #
$str
üü# 6
{
üü6 7
Precipitation
üü7 D
}
üüD E
$str
üüE H
"
üüH I
+
üüJ K
$"
†† 
$str
†† 
{
†† 
Lighting
†† "
}
††" #
$str
††# .
{
††. /
Clouds
††/ 5
}
††5 6
"
††6 7
;
††7 8
}
°° 	
public
££ 
static
££ 
void
££ "
SetCriteriaToDefault
££ /
(
££/ 0
)
££0 1
{
§§ 	%
_minTemperatureCriteria
•• #
=
••$ %
$num
••& '
;
••' (%
_maxTemperatureCriteria
¶¶ #
=
¶¶$ %
$num
¶¶& (
;
¶¶( )
_windCriteria
ßß 
=
ßß 
$num
ßß 
;
ßß $
_precipitationCriteria
®® "
=
®®# $
$num
®®% &
;
®®& '
_humidityCriteria
©© 
=
©© 
$num
©©  "
;
©©" #
}
™™ 	
}
´´ 
}¨¨ Œ£
,/home/alex/c#/SpaceProject/src/DataReader.cs
	namespace 	
SpaceProject
 
. 
src 
{ 
public 

static 
class 

DataReader "
{ 
private

 
static

 
WeatherData

 "
[

" #
]

# $
ReadCSV

% ,
(

, -
string

- 3
filePath

4 <
)

< =
{ 	
string 
[ 
] 
lines 
= 
File !
.! "
ReadAllLines" .
(. /
filePath/ 7
)7 8
;8 9
CheckCSV 
( 
lines 
, 
filePath $
)$ %
;% &
WeatherData 
[ 
] 
weatherData %
=& '
new 
WeatherData 
[ 
lines !
[! "
$num" #
]# $
.$ %
Split% *
(* +
$char+ .
). /
./ 0
Length0 6
-7 8
$num9 :
]: ;
;; <
for 
( 
int 
i 
= 
$num 
; 
i 
< 
weatherData  +
.+ ,
Length, 2
;2 3
i4 5
++5 7
)7 8
{ 
weatherData 
[ 
i 
] 
=  
new! $
WeatherData% 0
(0 1
)1 2
;2 3
} 
for 
( 
int 
i 
= 
$num 
; 
i 
< 
lines  %
.% &
Length& ,
;, -
i. /
++/ 1
)1 2
{ 
string 
[ 
] 
values 
=  !
lines" '
[' (
i( )
]) *
.* +
Split+ 0
(0 1
$char1 4
)4 5
;5 6
for 
( 
int 
j 
= 
$num 
; 
j  !
<" #
values$ *
.* +
Length+ 1
;1 2
j3 4
++4 6
)6 7
{ 
int 
tempInt 
;  
double   

tempDouble   %
;  % &
bool!! 
isParseFailure!! '
;!!' (
switch"" 
("" 
values"" "
[""" #
$num""# $
]""$ %
.""% &
ToLower""& -
(""- .
)"". /
.""/ 0
Replace""0 7
(""7 8
$str""8 <
,""< =
$str""> @
)""@ A
)""A B
{## 
case$$ 
$str$$ "
:$$" #
isParseFailure%% *
=%%+ ,
!%%- .
int%%. 1
.%%1 2
TryParse%%2 :
(%%: ;
values%%; A
[%%A B
j%%B C
]%%C D
,%%D E
out%%F I
tempInt%%J Q
)%%Q R
;%%R S
if&& 
(&&  
isParseFailure&&  .
)&&. /
{'' 
throw((  %
new((& )
FormatException((* 9
(((9 :
$str))$ ;
+))< =
$str**$ 2
+**3 4
$"++$ &
$str++& *
{++* +
i+++ ,
+++- .
$num++/ 0
}++0 1
$str++1 ;
{++; <
j++< =
+++> ?
$num++@ A
}++A B
$str++B D
"++D E
)++E F
;++F G
},, 
weatherData-- '
[--' (
j--( )
---* +
$num--, -
]--- .
.--. /
Day--/ 2
=--3 4
tempInt--5 <
;--< =
break.. !
;..! "
case00 
$str00 *
:00* +
isParseFailure11 *
=11+ ,
!22 
double22 #
.22# $
TryParse22$ ,
(22, -
values22- 3
[223 4
j224 5
]225 6
,226 7
NumberStyles228 D
.22D E
Float22E J
,22J K
CultureInfo33 '
.33' (
InvariantCulture33( 8
,338 9
out33: =

tempDouble33> H
)33H I
;33I J
if55 
(55  
isParseFailure55  .
)55. /
{66 
throw77  %
new77& )
FormatException77* 9
(779 :
$str88$ D
+88E F
$str99$ 5
+996 7
$"::$ &
$str::& *
{::* +
i::+ ,
+::- .
$num::/ 0
}::0 1
$str::1 ;
{::; <
j::< =
+::> ?
$num::@ A
}::A B
$str::B D
"::D E
)::E F
;::F G
};; 
weatherData<< '
[<<' (
j<<( )
-<<* +
$num<<, -
]<<- .
.<<. /
Temperature<</ :
=<<; <

tempDouble<<= G
;<<G H
break== !
;==! "
case?? 
$str?? #
:??# $
isParseFailure@@ *
=@@+ ,
!AA 
doubleAA #
.AA# $
TryParseAA$ ,
(AA, -
valuesAA- 3
[AA3 4
jAA4 5
]AA5 6
,AA6 7
NumberStylesAA8 D
.AAD E
FloatAAE J
,AAJ K
CultureInfoBB '
.BB' (
InvariantCultureBB( 8
,BB8 9
outBB: =

tempDoubleBB> H
)BBH I
;BBI J
ifDD 
(DD  
isParseFailureDD  .
)DD. /
{EE 
throwFF  %
newFF& )
FormatExceptionFF* 9
(FF9 :
$strGG$ =
+GG> ?
$strHH$ 5
+HH6 7
$"II$ &
$strII& *
{II* +
iII+ ,
+II- .
$numII/ 0
}II0 1
$strII1 ;
{II; <
jII< =
+II> ?
$numII@ A
}IIA B
$strIIB D
"IID E
)IIE F
;IIF G
}JJ 
weatherDataKK '
[KK' (
jKK( )
-KK* +
$numKK, -
]KK- .
.KK. /
WindKK/ 3
=KK4 5

tempDoubleKK6 @
;KK@ A
breakLL !
;LL! "
caseNN 
$strNN '
:NN' (
isParseFailureOO *
=OO+ ,
!PP 
doublePP #
.PP# $
TryParsePP$ ,
(PP, -
valuesPP- 3
[PP3 4
jPP4 5
]PP5 6
,PP6 7
NumberStylesPP8 D
.PPD E
FloatPPE J
,PPJ K
CultureInfoQQ '
.QQ' (
InvariantCultureQQ( 8
,QQ8 9
outQQ: =

tempDoubleQQ> H
)QQH I
;QQI J
ifSS 
(SS  
isParseFailureSS  .
)SS. /
{TT 
throwUU  %
newUU& )
FormatExceptionUU* 9
(UU9 :
$strVV$ A
+VVB C
$strWW$ 5
+WW6 7
$"XX$ &
$strXX& *
{XX* +
iXX+ ,
+XX- .
$numXX/ 0
}XX0 1
$strXX1 ;
{XX; <
jXX< =
+XX> ?
$numXX@ A
}XXA B
$strXXB D
"XXD E
)XXE F
;XXF G
}YY 
weatherDataZZ '
[ZZ' (
jZZ( )
-ZZ* +
$numZZ, -
]ZZ- .
.ZZ. /
HumidityZZ/ 7
=ZZ8 9

tempDoubleZZ: D
;ZZD E
break[[ !
;[[! "
case]] 
$str]] ,
:]], -
isParseFailure^^ *
=^^+ ,
!__ 
double__ #
.__# $
TryParse__$ ,
(__, -
values__- 3
[__3 4
j__4 5
]__5 6
,__6 7
NumberStyles__8 D
.__D E
Float__E J
,__J K
CultureInfo`` '
.``' (
InvariantCulture``( 8
,``8 9
out``: =

tempDouble``> H
)``H I
;``I J
ifbb 
(bb  
isParseFailurebb  .
)bb. /
{cc 
throwdd  %
newdd& )
FormatExceptiondd* 9
(dd9 :
$stree$ F
+eeG H
$strff$ 5
+ff6 7
$"gg$ &
$strgg& *
{gg* +
igg+ ,
+gg- .
$numgg/ 0
}gg0 1
$strgg1 ;
{gg; <
jgg< =
+gg> ?
$numgg@ A
}ggA B
$strggB D
"ggD E
)ggE F
;ggF G
}hh 
weatherDataii '
[ii' (
jii( )
-ii* +
$numii, -
]ii- .
.ii. /
Precipitationii/ <
=ii= >

tempDoubleii? I
;iiI J
breakjj !
;jj! "
casell 
$strll '
:ll' (
ifmm 
(mm  
valuesmm  &
[mm& '
jmm' (
]mm( )
.mm) *
ToLowermm* 1
(mm1 2
)mm2 3
.nn) *
Replacenn* 1
(nn1 2
$strnn2 6
,nn6 7
$strnn8 :
)nn: ;
.oo) *
Equalsoo* 0
(oo0 1
$stroo1 5
)oo5 6
)oo6 7
weatherDataqq  +
[qq+ ,
jqq, -
-qq. /
$numqq0 1
]qq1 2
.qq2 3
Lightingqq3 ;
=qq< =
falseqq> C
;qqC D
elsess  
ifss! #
(ss$ %
valuesss% +
[ss+ ,
jss, -
]ss- .
.ss. /
ToLowerss/ 6
(ss6 7
)ss7 8
.tt. /
Replacett/ 6
(tt6 7
$strtt7 ;
,tt; <
$strtt= ?
)tt? @
.uu. /
Equalsuu/ 5
(uu5 6
$struu6 ;
)uu; <
)uu< =
weatherDataww  +
[ww+ ,
jww, -
-ww. /
$numww0 1
]ww1 2
.ww2 3
Lightingww3 ;
=ww< =
trueww> B
;wwB C
elsexx  
{yy 
throwzz  %
newzz& )
FormatExceptionzz* 9
(zz9 :
$str{{  K
+{{L M
$str||  0
+||1 2
$"}}  "
{}}" #
values}}# )
[}}) *
j}}* +
]}}+ ,
.}}, -
ToLower}}- 4
(}}4 5
)}}5 6
.}}6 7
Replace}}7 >
(}}> ?
$str}}? C
,}}C D
$str}}E G
)}}G H
}}}H I
"}}I J
+}}K L
$"~~  "
$str~~" )
{~~) *
i~~* +
+~~, -
$num~~. /
}~~/ 0
$str~~0 :
{~~: ;
j~~; <
+~~= >
$num~~? @
}~~@ A
"~~A B
)~~B C
;~~C D
} 
break
ÄÄ !
;
ÄÄ! "
case
ÇÇ 
$str
ÇÇ %
:
ÇÇ% &

CloudCover
ÉÉ &
	tempCloud
ÉÉ' 0
;
ÉÉ0 1
isParseFailure
ÑÑ *
=
ÑÑ+ ,
!
ÑÑ- .
Enum
ÑÑ. 2
.
ÑÑ2 3
TryParse
ÑÑ3 ;
(
ÑÑ; <
values
ÑÑ< B
[
ÑÑB C
j
ÑÑC D
]
ÑÑD E
.
ÖÖ2 3
Replace
ÖÖ3 :
(
ÖÖ: ;
$str
ÖÖ; ?
,
ÖÖ? @
$str
ÖÖA C
)
ÖÖC D
,
ÖÖD E
out
ÖÖF I
	tempCloud
ÖÖJ S
)
ÖÖS T
;
ÖÖT U
if
áá 
(
áá  
isParseFailure
áá  .
)
áá. /
{
àà 
throw
ââ  %
new
ââ& )
FormatException
ââ* 9
(
ââ9 :
$str
ää$ 8
+
ää9 :
$"
ãã$ &
$str
ãã& 7
{
ãã7 8
i
ãã8 9
+
ãã: ;
$num
ãã< =
}
ãã= >
$str
ãã> H
{
ããH I
j
ããI J
+
ããK L
$num
ããM N
}
ããN O
$str
ããO Q
"
ããQ R
+
ããS T
$"
åå$ &
$str
åå& 5
{
åå5 6
values
åå6 <
[
åå< =
j
åå= >
]
åå> ?
.
åå? @
Replace
åå@ G
(
ååG H
$str
ååH L
,
ååL M
$str
ååN P
)
ååP Q
}
ååQ R
"
ååR S
)
ååS T
;
ååT U
}
çç 
weatherData
éé '
[
éé' (
j
éé( )
-
éé* +
$num
éé, -
]
éé- .
.
éé. /
Clouds
éé/ 5
=
éé6 7
	tempCloud
éé8 A
;
ééA B
break
èè !
;
èè! "
default
ëë 
:
ëë  
throw
íí !
new
íí" %
FormatException
íí& 5
(
íí5 6
$"
ìì  "
$str
ìì" :
{
ìì: ;
filePath
ìì; C
}
ììC D
$str
ììD E
"
ììE F
+
ììG H
$"
îî  "
$str
îî" C
{
îîC D
i
îîD E
+
îîF G
$num
îîH I
}
îîI J
$str
îîJ K
"
îîK L
+
îîM N
$str
ïï  3
+
ïï4 5
$"
ññ  "
{
ññ" #
values
ññ# )
[
ññ) *
$num
ññ* +
]
ññ+ ,
.
ññ, -
ToLower
ññ- 4
(
ññ4 5
)
ññ5 6
.
ññ6 7
Replace
ññ7 >
(
ññ> ?
$str
ññ? C
,
ññC D
$str
ññE G
)
ññG H
}
ññH I
"
ññI J
)
ññJ K
;
ññK L
}
óó 
}
òò 
}
ôô 
return
öö 
weatherData
öö 
;
öö 
}
õõ 	
private
üü 
static
üü 
void
üü 
CheckCSV
üü $
(
üü$ %
string
üü% +
[
üü+ ,
]
üü, -
lines
üü. 3
,
üü3 4
string
üü5 ;
filePath
üü< D
)
üüD E
{
†† 	
if
°° 
(
°° 
lines
°° 
.
°° 
Length
°° 
!=
°° 
$num
°°  !
)
°°! "
{
¢¢ 
throw
££ 
new
££ 
FormatException
££ )
(
££) *
$"
§§ 
$str
§§ 3
{
§§3 4
filePath
§§4 <
}
§§< =
$str
§§= ?
"
§§? @
+
§§A B
$str
•• :
+
••; <
$"
¶¶ 
$str
¶¶ #
{
¶¶# $
lines
¶¶$ )
.
¶¶) *
Length
¶¶* 0
}
¶¶0 1
"
¶¶1 2
)
¶¶2 3
;
¶¶3 4
}
ßß 
if
©© 
(
©© 
lines
©© 
[
©© 
$num
©© 
]
©© 
.
©© 
Split
©© 
(
©© 
$char
©© "
)
©©" #
.
©©# $
Length
©©$ *
>
©©+ ,
$num
©©- /
)
©©/ 0
{
™™ 
throw
´´ 
new
´´ 
FormatException
´´ )
(
´´) *
$"
¨¨ 
$str
¨¨ 3
{
¨¨3 4
filePath
¨¨4 <
}
¨¨< =
$str
¨¨= ?
"
¨¨? @
+
¨¨A B
$str
≠≠ 7
+
≠≠8 9
$"
ÆÆ 
$str
ÆÆ 0
{
ÆÆ0 1
lines
ÆÆ1 6
[
ÆÆ6 7
$num
ÆÆ7 8
]
ÆÆ8 9
.
ÆÆ9 :
Split
ÆÆ: ?
(
ÆÆ? @
$char
ÆÆ@ C
)
ÆÆC D
.
ÆÆD E
Length
ÆÆE K
}
ÆÆK L
"
ÆÆL M
)
ÆÆM N
;
ÆÆN O
}
ØØ 
var
±± 
firstValues
±± 
=
±± 
lines
±± #
.
±±# $
Select
±±$ *
(
±±* +
line
±±+ /
=>
±±0 2
line
±±3 7
.
±±7 8
Split
±±8 =
(
±±= >
$char
±±> A
)
±±A B
[
±±B C
$num
±±C D
]
±±D E
)
±±E F
;
±±F G
bool
≤≤ 
isEachRowUnique
≤≤  
=
≤≤! "
firstValues
≤≤# .
.
≤≤. /
Distinct
≤≤/ 7
(
≤≤7 8
)
≤≤8 9
.
≤≤9 :
Count
≤≤: ?
(
≤≤? @
)
≤≤@ A
==
≤≤B D
lines
≤≤E J
.
≤≤J K
Length
≤≤K Q
;
≤≤Q R
if
¥¥ 
(
¥¥ 
!
¥¥ 
isEachRowUnique
¥¥  
)
¥¥  !
{
µµ 
throw
∂∂ 
new
∂∂ 
FormatException
∂∂ )
(
∂∂) *
$"
∑∑ 
$str
∑∑ 3
{
∑∑3 4
filePath
∑∑4 <
}
∑∑< =
$str
∑∑= ?
"
∑∑? @
+
∑∑A B
$str
∏∏ C
)
∏∏C D
;
∏∏D E
}
ππ 
string
ºº 
?
ºº 
dayRow
ºº 
=
ºº 
Array
ºº "
.
ºº" #
Find
ºº# '
(
ºº' (
lines
ºº( -
,
ºº- .
line
ºº/ 3
=>
ºº4 6
line
ºº7 ;
.
ºº; <
ToLower
ºº< C
(
ººC D
)
ººD E
.
ΩΩ< =
Replace
ΩΩ= D
(
ΩΩD E
$str
ΩΩE I
,
ΩΩI J
$str
ΩΩK M
)
ΩΩM N
.
ææ< =

StartsWith
ææ= G
(
ææG H
$str
ææH M
)
ææM N
)
ææN O
;
ææO P
if
¡¡ 
(
¡¡ 
dayRow
¡¡ 
!=
¡¡ 
null
¡¡ 
)
¡¡ 
{
¬¬ 
string
√√ 
[
√√ 
]
√√ 
values
√√ 
=
√√  !
dayRow
√√" (
.
√√( )
Split
√√) .
(
√√. /
$char
√√/ 2
)
√√2 3
;
√√3 4
bool
ƒƒ 
isDayRowUnique
ƒƒ #
=
ƒƒ$ %
values
ƒƒ& ,
.
ƒƒ, -
Distinct
ƒƒ- 5
(
ƒƒ5 6
)
ƒƒ6 7
.
ƒƒ7 8
Count
ƒƒ8 =
(
ƒƒ= >
)
ƒƒ> ?
==
ƒƒ@ B
values
ƒƒC I
.
ƒƒI J
Length
ƒƒJ P
;
ƒƒP Q
if
≈≈ 
(
≈≈ 
!
≈≈ 
isDayRowUnique
≈≈ #
)
≈≈# $
{
∆∆ 
throw
«« 
new
«« 
FormatException
«« -
(
««- .
$"
»» 
$str
»» 3
{
»»3 4
filePath
»»4 <
}
»»< =
$str
»»= ?
"
»»? @
+
»»A B
$str
…… =
)
……= >
;
……> ?
}
   
}
ÀÀ 
}
ÃÃ 	
public
–– 
static
–– 
List
–– 
<
–– 
CityWeather
–– &
>
––& ' 
LoadDataFromFolder
––( :
(
––: ;
string
––; A

folderPath
––B L
)
––L M
{
—— 	
var
““ 
list
““ 
=
““ 
new
““ 
List
““ 
<
““  
CityWeather
““  +
>
““+ ,
(
““, -
)
““- .
;
““. /
string
‘‘ 
[
‘‘ 
]
‘‘ 
fileEntries
‘‘  
=
‘‘! "
	Directory
’’ 
.
’’ 
GetFiles
’’ 
(
’’ 

folderPath
’’ )
,
’’) *
$str
’’+ =
)
’’= >
;
’’> ?
foreach
◊◊ 
(
◊◊ 
string
◊◊ 
filePath
◊◊ $
in
◊◊% '
fileEntries
◊◊( 3
)
◊◊3 4
{
ÿÿ 
WeatherData
ŸŸ 
[
ŸŸ 
]
ŸŸ 
cityWeatherData
ŸŸ -
=
ŸŸ. /
ReadCSV
ŸŸ0 7
(
ŸŸ7 8
filePath
ŸŸ8 @
)
ŸŸ@ A
;
ŸŸA B
string
€€ 
cityNameString
€€ %
=
€€& '
Path
‹‹ 
.
‹‹ )
GetFileNameWithoutExtension
‹‹ 0
(
‹‹0 1
filePath
‹‹1 9
)
‹‹9 :
.
›› 
Replace
›› 
(
›› 
$str
›› *
,
››* +
$str
››, .
)
››. /
;
››/ 0
if
ﬂﬂ 
(
ﬂﬂ 
!
ﬂﬂ 
Enum
ﬂﬂ 
.
ﬂﬂ 
TryParse
ﬂﬂ "
(
ﬂﬂ" #
cityNameString
ﬂﬂ# 1
,
ﬂﬂ1 2
out
ﬂﬂ3 6
CityName
ﬂﬂ7 ?
cityNameEnum
ﬂﬂ@ L
)
ﬂﬂL M
)
ﬂﬂM N
{
‡‡ 
throw
·· 
new
·· 
FormatException
·· -
(
··- .
$str
‚‚ ,
+
‚‚- .
$"
„„ 
$str
„„ )
{
„„) *
cityNameString
„„* 8
}
„„8 9
$str
„„9 :
"
„„: ;
)
„„; <
;
„„< =
}
‰‰ 
CityWeather
ÊÊ 
currentCity
ÊÊ '
=
ÊÊ( )
new
ÊÊ* -
(
ÊÊ- .
cityNameEnum
ÊÊ. :
,
ÊÊ: ;
cityWeatherData
ÊÊ< K
)
ÊÊK L
;
ÊÊL M
list
ËË 
.
ËË 
Add
ËË 
(
ËË 
currentCity
ËË $
)
ËË$ %
;
ËË% &
}
ÈÈ 
return
ÍÍ 
list
ÍÍ 
;
ÍÍ 
}
ÎÎ 	
}
ÏÏ 
}ÌÌ ”÷
-/home/alex/c#/SpaceProject/src/CityWeather.cs
	namespace		 	
SpaceProject		
 
.		 
src		 
{

 
public 

enum 
CityName 
{ 
Kourou 
, 
Tanegashima 
, 
CapeCanaveral 
, 
Kodiak 
, 
Mahia 
, 
} 
public 

class 
CityWeather 
{ 
public 
CityName 
Name 
{ 
get "
;" #
set$ '
;' (
}) *
public 
WeatherData 
[ 
] 
WeatherDatas )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
public 
WeatherData 
? 
BestDayForLaunch ,
;, -
public 
CityWeather 
( 
CityName #
cityName$ ,
,, -
WeatherData. 9
[9 :
]: ;
weatherDatas< H
)H I
{ 	
this 
. 
Name 
= 
cityName  
;  !
this 
. 
WeatherDatas 
= 
weatherDatas  ,
;, -
} 	
public 
void 
	PrintData 
( 
) 
{ 	
var   
table   
=   
new   
ConsoleTable   (
(  ( )
$str  ) .
,  . /
$str  0 B
,  B C
$str  D P
,  P Q
$str!! '
,!!' (
$str!!) <
,!!< =
$str!!> H
,!!H I
$str!!J R
)!!R S
;!!S T
foreach## 
(## 
var## 
day## 
in## 
WeatherDatas##  ,
)##, -
{$$ 
table%% 
.%% 
AddRow%% 
(%% 
day%%  
.%%  !
Day%%! $
,%%$ %
day%%& )
.%%) *
Temperature%%* 5
,%%5 6
day%%7 :
.%%: ;
Wind%%; ?
,%%? @
day%%A D
.%%D E
Humidity%%E M
,%%M N
day&& 
.&& 
Precipitation&& "
,&&" #
day&&$ '
.&&' (
Lighting&&( 0
,&&0 1
day&&2 5
.&&5 6
Clouds&&6 <
)&&< =
;&&= >
}'' 
System)) 
.)) 
Console)) 
.)) 
	WriteLine)) $
())$ %
$"))% '
$str))' )
{))) *
Name))* .
})). /
$str))/ ?
"))? @
)))@ A
;))A B
table** 
.** 
Write** 
(** 
)** 
;** 
}++ 	
public22 
WeatherData22 
?22  
FindBestDayForLaunch22 0
(220 1
out221 4
string225 ;
leadCondition22< I
)22I J
{33 	
List44 
<44 
WeatherData44 
>44 
goodDays44 &
=44' (
new44) ,
List44- 1
<441 2
WeatherData442 =
>44= >
(44> ?
)44? @
;44@ A
foreach55 
(55 
var55 
day55 
in55 
WeatherDatas55  ,
)55, -
{66 
if77 
(77 
day77 
.77 
Precipitation77 %
>77& '
WeatherData77( 3
.773 4!
PrecipitationCriteria774 I
||77J L
day88 
.88 
Lighting88  
||88! #
day99 
.99 
Humidity99  
>=99! #
WeatherData99$ /
.99/ 0
HumidityCriteria990 @
||99A C
day:: 
.:: 
Wind:: 
>:: 
WeatherData:: *
.::* +
WindCriteria::+ 7
||::8 :
day;; 
.;; 
Clouds;; 
==;; !

CloudCover;;" ,
.;;, -
Cumulus;;- 4
||;;5 7
day<< 
.<< 
Clouds<< 
==<< !

CloudCover<<" ,
.<<, -
Nimbus<<- 3
||<<4 6
day== 
.== 
Temperature== #
<==$ %
WeatherData==& 1
.==1 2"
MinTemperatureCriteria==2 H
||==I K
day>> 
.>> 
Temperature>> #
>>>$ %
WeatherData>>& 1
.>>1 2"
MaxTemperatureCriteria>>2 H
)>>H I
continue>>J R
;>>R S
goodDays@@ 
.@@ 
Add@@ 
(@@ 
day@@  
)@@  !
;@@! "
}AA 
ifCC 
(CC 
goodDaysCC 
.CC 
CountCC 
==CC !
$numCC" #
)CC# $
{DD 
leadConditionEE 
=EE 
stringEE  &
.EE& '
EmptyEE' ,
;EE, -
returnFF 
nullFF 
;FF 
}GG 
ifHH 
(HH 
goodDaysHH 
.HH 
CountHH 
==HH !
$numHH" #
)HH# $
{II 
leadConditionJJ 
=JJ 
$strJJ  @
;JJ@ A
BestDayForLaunchKK  
=KK! "
goodDaysKK# +
[KK+ ,
$numKK, -
]KK- .
;KK. /
returnLL 
goodDaysLL 
[LL  
$numLL  !
]LL! "
;LL" #
}MM 
varOO 
OrderedByWindArrayOO "
=OO# $
goodDaysPP 
.PP 
OrderByPP 
(PP 
dayPP  
=>PP! #
dayPP$ '
.PP' (
WindPP( ,
)PP, -
.PP- .
ToArrayPP. 5
(PP5 6
)PP6 7
;PP7 8
ifVV 
(VV 
MathVV 
.VV 
AbsVV 
(VV 
OrderedByWindArrayVV +
[VV+ ,
$numVV, -
]VV- .
.VV. /
WindVV/ 3
-VV4 5
OrderedByWindArrayVV6 H
[VVH I
$numVVI J
]VVJ K
.VVK L
WindVVL P
)VVP Q
>=VVR T
doubleVVU [
.VV[ \
EpsilonVV\ c
)VVc d
{WW 
leadConditionXX 
=XX 
$strXX  B
+XXC D
$strYY  9
;YY9 :
BestDayForLaunchZZ  
=ZZ! "
OrderedByWindArrayZZ# 5
[ZZ5 6
$numZZ6 7
]ZZ7 8
;ZZ8 9
return[[ 
OrderedByWindArray[[ )
[[[) *
$num[[* +
][[+ ,
;[[, -
}\\ 
varbb 
FirstByHumidityDaybb "
=bb# $
OrderedByWindArraybb% 7
.bb7 8
Wherebb8 =
(bb= >
daybb> A
=>bbB D
Mathcc 
.cc 
Abscc 
(cc 
daycc 
.cc 
Windcc !
-cc" #
OrderedByWindArraycc$ 6
[cc6 7
$numcc7 8
]cc8 9
.cc9 :
Windcc: >
)cc> ?
<=cc@ B
doubleccC I
.ccI J
EpsilonccJ Q
)ccQ R
.dd 
OrderBydd 
(dd 
daydd 
=>dd 
daydd  #
.dd# $
Humiditydd$ ,
)dd, -
.dd- .
Firstdd. 3
(dd3 4
)dd4 5
;dd5 6
leadConditionff 
=ff 
$strff J
;ffJ K
BestDayForLaunchgg 
=gg 
FirstByHumidityDaygg 1
;gg1 2
returnhh 
FirstByHumidityDayhh %
;hh% &
}ii 	
publicoo 
staticoo 
CityWeatheroo !
?oo! "
FindBestLocationoo# 3
(oo3 4
Listoo4 8
<oo8 9
CityWeatheroo9 D
>ooD E

citiesListooF P
,ooP Q
outooR U
stringooV \
leadConditionoo] j
)ooj k
{pp 	
Listss 
<ss 
CityWeatherss 
>ss 
citiesss $
=ss% &
newss' *
Listss+ /
<ss/ 0
CityWeatherss0 ;
>ss; <
(ss< =

citiesListss= G
)ssG H
;ssH I
citiestt 
.tt 
	RemoveAlltt 
(tt 
citytt !
=>tt" $
citytt% )
.tt) *
BestDayForLaunchtt* :
==tt; =
nulltt> B
)ttB C
;ttC D
varvv 
tablevv 
=vv 
newvv 
ConsoleTablevv (
(vv( )
$strvv) /
,vv/ 0
$strvv1 6
,vv6 7
$strvv8 J
,vvJ K
$strvvL X
,vvX Y
$strww '
,ww' (
$strww) <
,ww< =
$strww> H
,wwH I
$strwwJ R
)wwR S
;wwS T
foreach|| 
(|| 
var|| 
city|| 
in||  
cities||! '
)||' (
{}} 
table~~ 
.~~ 
AddRow~~ 
(~~ 
city~~ !
.~~! "
Name~~" &
,~~& '
city~~( ,
.~~, -
BestDayForLaunch~~- =
.~~= >
Day~~> A
,~~A B
city~~C G
.~~G H
BestDayForLaunch~~H X
.~~X Y
Temperature~~Y d
,~~d e
city 
. 
BestDayForLaunch &
.& '
Wind' +
,+ ,
city- 1
.1 2
BestDayForLaunch2 B
.B C
HumidityC K
,K L
city
ÄÄ 
.
ÄÄ 
BestDayForLaunch
ÄÄ &
.
ÄÄ& '
Precipitation
ÄÄ' 4
,
ÄÄ4 5
city
ÄÄ6 :
.
ÄÄ: ;
BestDayForLaunch
ÄÄ; K
.
ÄÄK L
Lighting
ÄÄL T
,
ÄÄT U
city
ÅÅ 
.
ÅÅ 
BestDayForLaunch
ÅÅ &
.
ÅÅ& '
Clouds
ÅÅ' -
)
ÅÅ- .
;
ÅÅ. /
}
ÇÇ 
System
ÑÑ 
.
ÑÑ 
Console
ÑÑ 
.
ÑÑ 
	WriteLine
ÑÑ $
(
ÑÑ$ %
$str
ÑÑ% M
)
ÑÑM N
;
ÑÑN O
table
ÖÖ 
.
ÖÖ 
Write
ÖÖ 
(
ÖÖ 
)
ÖÖ 
;
ÖÖ 
if
ââ 
(
ââ 
cities
ââ 
.
ââ 
Count
ââ 
==
ââ 
$num
ââ  !
)
ââ! "
{
ää 
leadCondition
ãã 
=
ãã 
string
ãã  &
.
ãã& '
Empty
ãã' ,
;
ãã, -
return
åå 
null
åå 
;
åå 
}
çç 
if
ëë 
(
ëë 
cities
ëë 
.
ëë 
Count
ëë 
==
ëë 
$num
ëë  !
)
ëë! "
{
íí 
leadCondition
ìì 
=
ìì 
$"
ìì  "
$str
ìì" +
{
ìì+ ,
cities
ìì, 2
[
ìì2 3
$num
ìì3 4
]
ìì4 5
.
ìì5 6
Name
ìì6 :
}
ìì: ;
$str
ìì; <
"
ìì< =
+
ìì> ?
$str
îî  N
+
îîO P
$"
ïï  "
{
ïï" #
cities
ïï# )
[
ïï) *
$num
ïï* +
]
ïï+ ,
.
ïï, -
BestDayForLaunch
ïï- =
.
ïï= >
Day
ïï> A
}
ïïA B
$str
ïïB D
"
ïïD E
;
ïïE F
return
ññ 
cities
ññ 
[
ññ 
$num
ññ 
]
ññ  
;
ññ  !
}
óó 
var
ôô  
OrderedByWindArray
ôô "
=
ôô# $
cities
öö 
.
öö 
OrderBy
öö 
(
öö 
city
öö #
=>
öö$ &
city
öö' +
.
öö+ ,
BestDayForLaunch
öö, <
.
öö< =
Wind
öö= A
)
ööA B
.
ööB C
ToArray
ööC J
(
ööJ K
)
ööK L
;
ööL M
if
†† 
(
†† 
Math
†† 
.
†† 
Abs
†† 
(
††  
OrderedByWindArray
†† +
[
††+ ,
$num
††, -
]
††- .
.
††. /
BestDayForLaunch
††/ ?
.
††? @
Wind
††@ D
-
††E F 
OrderedByWindArray
°° "
[
°°" #
$num
°°# $
]
°°$ %
.
°°% &
BestDayForLaunch
°°& 6
.
°°6 7
Wind
°°7 ;
)
°°; <
>=
°°= ?
double
°°@ F
.
°°F G
Epsilon
°°G N
)
°°N O
{
¢¢ 
leadCondition
££ 
=
££ 
$"
££  "
$str
££" +
{
££+ , 
OrderedByWindArray
££, >
[
££> ?
$num
££? @
]
££@ A
.
££A B
Name
££B F
}
££F G
$str
££G H
"
££H I
+
££J K
$str
§§  C
+
§§D E
$"
••  "
{
••" # 
OrderedByWindArray
••# 5
[
••5 6
$num
••6 7
]
••7 8
.
••8 9
BestDayForLaunch
••9 I
.
••I J
Day
••J M
}
••M N
$str
••N P
"
••P Q
+
••R S
$str
¶¶  9
;
¶¶9 :
return
ßß  
OrderedByWindArray
ßß )
[
ßß) *
$num
ßß* +
]
ßß+ ,
;
ßß, -
}
®® 
var
ÆÆ $
OrderedByHumidityArray
ÆÆ &
=
ÆÆ' ( 
OrderedByWindArray
ÆÆ) ;
.
ÆÆ; <
Where
ÆÆ< A
(
ÆÆA B
city
ØØ 
=>
ØØ 
Math
ØØ 
.
ØØ 
Abs
ØØ  
(
ØØ  !
city
ØØ! %
.
ØØ% &
BestDayForLaunch
ØØ& 6
.
ØØ6 7
Wind
ØØ7 ;
-
ØØ< = 
OrderedByWindArray
∞∞ "
[
∞∞" #
$num
∞∞# $
]
∞∞$ %
.
∞∞% &
BestDayForLaunch
∞∞& 6
.
∞∞6 7
Wind
∞∞7 ;
)
∞∞; <
<=
∞∞= ?
double
∞∞@ F
.
∞∞F G
Epsilon
∞∞G N
)
∞∞N O
.
±± 
OrderBy
±± 
(
±± 
city
±± 
=>
±±  
city
±±! %
.
±±% &
BestDayForLaunch
±±& 6
.
±±6 7
Humidity
±±7 ?
)
±±? @
.
±±@ A
ToArray
±±A H
(
±±H I
)
±±I J
;
±±J K
if
µµ 
(
µµ 
Math
µµ 
.
µµ 
Abs
µµ 
(
µµ $
OrderedByHumidityArray
µµ /
[
µµ/ 0
$num
µµ0 1
]
µµ1 2
.
µµ2 3
BestDayForLaunch
µµ3 C
.
µµC D
Humidity
µµD L
-
µµM N$
OrderedByHumidityArray
∂∂ &
[
∂∂& '
$num
∂∂' (
]
∂∂( )
.
∂∂) *
BestDayForLaunch
∂∂* :
.
∂∂: ;
Humidity
∂∂; C
)
∂∂C D
>=
∂∂E G
double
∂∂H N
.
∂∂N O
Epsilon
∂∂O V
)
∂∂V W
{
∑∑ 
leadCondition
∏∏ 
=
∏∏ 
$"
∏∏  "
$str
∏∏" +
{
∏∏+ ,$
OrderedByHumidityArray
∏∏, B
[
∏∏B C
$num
∏∏C D
]
∏∏D E
.
∏∏E F
Name
∏∏F J
}
∏∏J K
$str
∏∏K P
"
∏∏P Q
+
∏∏R S
$str
ππ  L
+
ππM N
$"
∫∫  "
{
∫∫" #$
OrderedByHumidityArray
∫∫# 9
[
∫∫9 :
$num
∫∫: ;
]
∫∫; <
.
∫∫< =
BestDayForLaunch
∫∫= M
.
∫∫M N
Day
∫∫N Q
}
∫∫Q R
$str
∫∫R S
"
∫∫S T
;
∫∫T U
return
ªª $
OrderedByHumidityArray
ªª -
[
ªª- .
$num
ªª. /
]
ªª/ 0
;
ªª0 1
}
ºº 
var
¿¿ %
FirstByClosestToEquator
¿¿ '
=
¿¿( )$
OrderedByHumidityArray
¿¿* @
.
¿¿@ A
Where
¿¿A F
(
¿¿F G
city
¡¡ 
=>
¡¡ 
Math
¡¡ 
.
¡¡ 
Abs
¡¡  
(
¡¡  !
city
¡¡! %
.
¡¡% &
BestDayForLaunch
¡¡& 6
.
¡¡6 7
Humidity
¡¡7 ?
-
¡¡@ A$
OrderedByHumidityArray
¬¬ &
[
¬¬& '
$num
¬¬' (
]
¬¬( )
.
¬¬) *
BestDayForLaunch
¬¬* :
.
¬¬: ;
Humidity
¬¬; C
)
¬¬C D
<=
¬¬E G
double
¬¬H N
.
¬¬N O
Epsilon
¬¬O V
)
¬¬V W
.
√√ 
OrderBy
√√ 
(
√√ 
city
√√ 
=>
√√  
city
√√! %
.
√√% &
Name
√√& *
)
√√* +
.
√√+ ,
First
√√, 1
(
√√1 2
)
√√2 3
;
√√3 4
leadCondition
≈≈ 
=
≈≈ 
$"
≈≈ 
$str
≈≈ '
{
≈≈' (%
FirstByClosestToEquator
≈≈( ?
.
≈≈? @
Name
≈≈@ D
}
≈≈D E
$str
≈≈E J
"
≈≈J K
+
≈≈L M
$str
∆∆ H
+
∆∆I J
$"
«« 
{
«« $
OrderedByHumidityArray
«« 5
[
««5 6
$num
««6 7
]
««7 8
.
««8 9
BestDayForLaunch
««9 I
.
««I J
Day
««J M
}
««M N
$str
««N O
"
««O P
+
««Q R
$str
»» <
;
»»< =
return
…… %
FirstByClosestToEquator
…… *
;
……* +
}
ÀÀ 	
public
œœ 
static
œœ 
void
œœ !
ExportBestDateToCSV
œœ .
(
œœ. /
List
œœ/ 3
<
œœ3 4
CityWeather
œœ4 ?
>
œœ? @
cities
œœA G
,
œœG H
out
œœI L
string
œœM S
filePath
œœT \
)
œœ\ ]
{
–– 	
string
—— 
currentDirectory
—— #
=
——$ %
	Directory
——& /
.
——/ 0!
GetCurrentDirectory
——0 C
(
——C D
)
——D E
;
——E F
filePath
““ 
=
““ 
$"
““ 
{
““ 
currentDirectory
““ *
}
““* +
$str
““+ D
"
““D E
;
““E F
using
’’ 
(
’’ 
StreamWriter
’’ 
writer
’’  &
=
’’' (
new
’’) ,
StreamWriter
’’- 9
(
’’9 :
filePath
’’: B
,
’’B C
false
’’D I
,
’’I J
Encoding
’’K S
.
’’S T
UTF8
’’T X
)
’’X Y
)
’’Y Z
{
÷÷ 
writer
ÿÿ 
.
ÿÿ 
	WriteLine
ÿÿ  
(
ÿÿ  !
$str
ÿÿ! I
)
ÿÿI J
;
ÿÿJ K
for
›› 
(
›› 
int
›› 
i
›› 
=
›› 
$num
›› 
;
›› 
i
››  !
<
››" #
cities
››$ *
.
››* +
Count
››+ 0
;
››0 1
i
››2 3
++
››3 5
)
››5 6
{
ﬁﬁ 
if
‡‡ 
(
‡‡ 
cities
‡‡ 
[
‡‡ 
i
‡‡  
]
‡‡  !
.
‡‡! "
BestDayForLaunch
‡‡" 2
!=
‡‡3 5
null
‡‡6 :
)
‡‡: ;
writer
·· 
.
·· 
	WriteLine
·· (
(
··( )
$"
··) +
$str
··+ -
{
··- .
cities
··. 4
[
··4 5
i
··5 6
]
··6 7
.
··7 8
Name
··8 <
}
··< =
$str
··= A
{
··A B
cities
··B H
[
··H I
i
··I J
]
··J K
.
··K L
BestDayForLaunch
··L \
.
··\ ]
Day
··] `
}
··` a
"
··a b
)
··b c
;
··c d
else
‚‚ 
writer
„„ 
.
„„ 
	WriteLine
„„ (
(
„„( )
$"
„„) +
$str
„„+ -
{
„„- .
cities
„„. 4
[
„„4 5
i
„„5 6
]
„„6 7
.
„„7 8
Name
„„8 <
}
„„< =
$str
„„= _
"
„„_ `
)
„„` a
;
„„a b
}
‰‰ 
}
ÂÂ 
Console
ÊÊ 
.
ÊÊ 
	WriteLine
ÊÊ 
(
ÊÊ 
$"
ÊÊ  
$str
ÊÊ  *
{
ÊÊ* +
filePath
ÊÊ+ 3
}
ÊÊ3 4
$str
ÊÊ4 T
"
ÊÊT U
)
ÊÊU V
;
ÊÊV W
}
ËË 	
public
ÌÌ 
static
ÌÌ 
void
ÌÌ 
SendDataToMail
ÌÌ )
(
ÌÌ) *
CityWeather
ÌÌ* 5
bestLocation
ÌÌ6 B
,
ÌÌB C
string
ÌÌD J
filePath
ÌÌK S
)
ÌÌS T
{
ÓÓ 	
if
ÔÔ 
(
ÔÔ 
bestLocation
ÔÔ 
.
ÔÔ 
BestDayForLaunch
ÔÔ -
==
ÔÔ. 0
null
ÔÔ1 5
)
ÔÔ5 6
throw
 
new
 
ArgumentException
 +
(
+ ,
$str
, S
+
T U
$str
ÒÒ, Q
)
ÒÒQ R
;
ÒÒR S
System
ÛÛ 
.
ÛÛ 
Console
ÛÛ 
.
ÛÛ 
	WriteLine
ÛÛ $
(
ÛÛ$ %
$str
ÛÛ% `
+
ÛÛa b
$str
ÙÙ H
)
ÙÙH I
;
ÙÙI J
System
ˆˆ 
.
ˆˆ 
Console
ˆˆ 
.
ˆˆ 
	WriteLine
ˆˆ $
(
ˆˆ$ %
$str
ˆˆ% ;
)
ˆˆ; <
;
ˆˆ< =
string
˜˜ 
senderEmail
˜˜ 
=
˜˜  
System
˜˜! '
.
˜˜' (
Console
˜˜( /
.
˜˜/ 0
ReadLine
˜˜0 8
(
˜˜8 9
)
˜˜9 :
??
˜˜; =
throw
¯¯ 
new
¯¯ 
ArgumentException
¯¯ +
(
¯¯+ ,
$str
¯¯, N
)
¯¯N O
;
¯¯O P
string
˙˙ 
pattern
˙˙ 
=
˙˙ 
$str
˙˙ .
;
˙˙. /
Regex
˚˚ 
regex
˚˚ 
=
˚˚ 
new
˚˚ 
Regex
˚˚ #
(
˚˚# $
pattern
˚˚$ +
,
˚˚+ ,
RegexOptions
˚˚- 9
.
˚˚9 :
None
˚˚: >
,
˚˚> ?
TimeSpan
˚˚@ H
.
˚˚H I
FromMilliseconds
˚˚I Y
(
˚˚Y Z
$num
˚˚Z ]
)
˚˚] ^
)
˚˚^ _
;
˚˚_ `
bool
¸¸ 
isMatch
¸¸ 
=
¸¸ 
regex
¸¸  
.
¸¸  !
IsMatch
¸¸! (
(
¸¸( )
senderEmail
¸¸) 4
)
¸¸4 5
;
¸¸5 6
if
˝˝ 
(
˝˝ 
!
˝˝ 
isMatch
˝˝ 
)
˝˝ 
throw
˝˝ 
new
˝˝  #
ArgumentException
˝˝$ 5
(
˝˝5 6
$str
˝˝6 U
)
˝˝U V
;
˝˝V W
SecureString
ÄÄ 
	securePwd
ÄÄ "
=
ÄÄ# $
new
ÄÄ% (
SecureString
ÄÄ) 5
(
ÄÄ5 6
)
ÄÄ6 7
;
ÄÄ7 8
ConsoleKeyInfo
ÅÅ 
key
ÅÅ 
;
ÅÅ 
Console
ÉÉ 
.
ÉÉ 
Write
ÉÉ 
(
ÉÉ 
$str
ÉÉ .
)
ÉÉ. /
;
ÉÉ/ 0
do
ÑÑ 
{
ÖÖ 
key
ÜÜ 
=
ÜÜ 
Console
ÜÜ 
.
ÜÜ 
ReadKey
ÜÜ %
(
ÜÜ% &
true
ÜÜ& *
)
ÜÜ* +
;
ÜÜ+ ,
	securePwd
àà 
.
àà 

AppendChar
àà $
(
àà$ %
key
àà% (
.
àà( )
KeyChar
àà) 0
)
àà0 1
;
àà1 2
Console
ââ 
.
ââ 
Write
ââ 
(
ââ 
$str
ââ !
)
ââ! "
;
ââ" #
}
åå 
while
åå 
(
åå 
key
åå 
.
åå 
Key
åå 
!=
åå 

ConsoleKey
åå  *
.
åå* +
Enter
åå+ 0
)
åå0 1
;
åå1 2
	securePwd
éé 
.
éé 
MakeReadOnly
éé "
(
éé" #
)
éé# $
;
éé$ %

SmtpClient
ëë 
client
ëë 
=
ëë 
new
ëë  #

SmtpClient
ëë$ .
(
ëë. /
$str
ëë/ F
)
ëëF G
;
ëëG H
client
íí 
.
íí 
Port
íí 
=
íí 
$num
íí 
;
íí 
client
ìì 
.
ìì #
UseDefaultCredentials
ìì (
=
ìì) *
false
ìì+ 0
;
ìì0 1
client
îî 
.
îî 
	EnableSsl
îî 
=
îî 
true
îî #
;
îî# $
client
ïï 
.
ïï 
Credentials
ïï 
=
ïï  
new
ïï! $
NetworkCredential
ïï% 6
(
ïï6 7
senderEmail
ïï7 B
,
ïïB C
	securePwd
ïïD M
)
ïïM N
;
ïïN O
	securePwd
ññ 
.
ññ 
Dispose
ññ 
(
ññ 
)
ññ 
;
ññ  
System
òò 
.
òò 
Console
òò 
.
òò 
	WriteLine
òò $
(
òò$ %
)
òò% &
;
òò& '
System
ôô 
.
ôô 
Console
ôô 
.
ôô 
	WriteLine
ôô $
(
ôô$ %
$str
ôô% 7
)
ôô7 8
;
ôô8 9
string
öö 
receiverEmail
öö  
=
öö! "
System
öö# )
.
öö) *
Console
öö* 1
.
öö1 2
ReadLine
öö2 :
(
öö: ;
)
öö; <
??
öö= ?
throw
õõ 
new
õõ 
ArgumentException
õõ +
(
õõ+ ,
$str
õõ, P
)
õõP Q
;
õõQ R
System
ùù 
.
ùù 
Console
ùù 
.
ùù 
	WriteLine
ùù $
(
ùù$ %
$str
ùù% 8
)
ùù8 9
;
ùù9 :
MailMessage
†† 
mail
†† 
=
†† 
new
†† "
MailMessage
††# .
(
††. /
senderEmail
††/ :
,
††: ;
receiverEmail
††< I
)
††I J
;
††J K
mail
°° 
.
°° 
Subject
°° 
=
°° 
$str
°° A
;
°°A B
mail
¢¢ 
.
¢¢ 
Body
¢¢ 
=
¢¢ 
$"
¢¢ 
$str
¢¢ 6
{
¢¢6 7
bestLocation
¢¢7 C
.
¢¢C D
Name
¢¢D H
}
¢¢H I
$str
¢¢I J
"
¢¢J K
+
¢¢L M
$"
££ 
$str
££ !
{
££! "
bestLocation
££" .
.
££. /
BestDayForLaunch
££/ ?
.
££? @
Day
££@ C
}
££C D
$str
££D E
"
££E F
;
££F G
mail
§§ 
.
§§ 

IsBodyHtml
§§ 
=
§§ 
false
§§ #
;
§§# $

Attachment
ßß 

attachment
ßß !
=
ßß" #
new
ßß$ '

Attachment
ßß( 2
(
ßß2 3
filePath
ßß3 ;
)
ßß; <
;
ßß< =
mail
®® 
.
®® 
Attachments
®® 
.
®® 
Add
®®  
(
®®  !

attachment
®®! +
)
®®+ ,
;
®®, -
client
´´ 
.
´´ 
Send
´´ 
(
´´ 
mail
´´ 
)
´´ 
;
´´ 
Console
≠≠ 
.
≠≠ 
	WriteLine
≠≠ 
(
≠≠ 
$str
≠≠ :
)
≠≠: ;
;
≠≠; <
}
ÆÆ 	
}
ØØ 
}∞∞ ÂQ
%/home/alex/c#/SpaceProject/Program.cs
System 
. 
Console 
. 
	WriteLine 
( 
$str J
+K L
$str N
+O P
$str J
+K L
$str A
+B C
$str w
+x y
$str h
)h i
;i j
while

 
(

 
true

 
)

 
{ 
try 
{ 
System 
. 
Console 
. 
	WriteLine  
(  !
$str! [
)[ \
;\ ]
string 
filePath 
= 
string  
.  !
Empty! &
;& '
filePath 
= 
System 
. 
Console !
.! "
ReadLine" *
(* +
)+ ,
??- /
throw	 
new 
ArgumentException $
($ %
$str% F
)F G
;G H
System 
. 
Console 
. 
	WriteLine  
(  !
$str! p
)p q
;q r
string 
choice 
= 
System 
. 
Console &
.& '
ReadLine' /
(/ 0
)0 1
??2 4
$str5 8
;8 9
if 

( 
choice 
. 
ToLower 
( 
) 
. 
Equals #
(# $
$str$ '
)' (
)( )
{ 	
System 
. 
Console 
. 
	WriteLine $
($ %
$str% Y
)Y Z
;Z [
System 
. 
Console 
. 
	WriteLine $
($ %
$str% <
)< =
;= >
WeatherData 
. "
MaxTemperatureCriteria .
=/ 0
Convert1 8
.8 9
ToDouble9 A
(A B
SystemB H
.H I
ConsoleI P
.P Q
ReadLineQ Y
(Y Z
)Z [
??\ ^
throw 
new 
ArgumentException '
(' (
$str( F
)F G
)G H
;H I
System 
. 
Console 
. 
	WriteLine $
($ %
$str% <
)< =
;= >
WeatherData 
. "
MinTemperatureCriteria .
=/ 0
Convert1 8
.8 9
ToDouble9 A
(A B
SystemB H
.H I
ConsoleI P
.P Q
ReadLineQ Y
(Y Z
)Z [
??\ ^
throw   
new   
ArgumentException   '
(  ' (
$str  ( F
)  F G
)  G H
;  H I
System"" 
."" 
Console"" 
."" 
	WriteLine"" $
(""$ %
$str""% B
)""B C
;""C D
WeatherData## 
.## 
WindCriteria## $
=##% &
Convert##' .
.##. /
ToDouble##/ 7
(##7 8
System##8 >
.##> ?
Console##? F
.##F G
ReadLine##G O
(##O P
)##P Q
??##R T
throw$$ 
new$$ 
ArgumentException$$ '
($$' (
$str$$( F
)$$F G
)$$G H
;$$H I
System&& 
.&& 
Console&& 
.&& 
	WriteLine&& $
(&&$ %
$str&&% =
)&&= >
;&&> ?
WeatherData'' 
.'' 
HumidityCriteria'' (
='') *
Convert''+ 2
.''2 3
ToDouble''3 ;
(''; <
System''< B
.''B C
Console''C J
.''J K
ReadLine''K S
(''S T
)''T U
??''V X
throw(( 
new(( 
ArgumentException(( '
(((' (
$str((( F
)((F G
)((G H
;((H I
System** 
.** 
Console** 
.** 
	WriteLine** $
(**$ %
$str**% C
)**C D
;**D E
WeatherData++ 
.++ !
PrecipitationCriteria++ -
=++. /
Convert++0 7
.++7 8
ToDouble++8 @
(++@ A
System++A G
.++G H
Console++H O
.++O P
ReadLine++P X
(++X Y
)++Y Z
??++[ ]
throw,, 
new,, 
ArgumentException,, '
(,,' (
$str,,( F
),,F G
),,G H
;,,H I
}-- 	
else.. 
WeatherData.. 
...  
SetCriteriaToDefault.. -
(..- .
)... /
;../ 0
System00 
.00 
Console00 
.00 
	WriteLine00  
(00  !
$str00! 6
)006 7
;007 8
var11 
cityList11 
=11 
new11 
List11 
<11  
CityWeather11  +
>11+ ,
(11, -
)11- .
;11. /
cityList22 
=22 

DataReader22 
.22 
LoadDataFromFolder22 0
(220 1
filePath221 9
)229 :
;22: ;
string33 
reason33 
;33 
foreach55 
(55 
var55 
city55 
in55 
cityList55 %
)55% &
{66 	
city77 
.77 
	PrintData77 
(77 
)77 
;77 
var88 
bestDay88 
=88 
city88 
.88  
FindBestDayForLaunch88 3
(883 4
out884 7
reason888 >
)88> ?
;88? @
if99 
(99 
bestDay99 
!=99 
null99 
)99  
{:: 
System;; 
.;; 
Console;; 
.;; 
	WriteLine;; (
(;;( )
$";;) +
$str;;+ E
{;;E F
city;;F J
.;;J K
Name;;K O
};;O P
$str;;P Q
";;Q R
+;;S T
$"<< 
$str<< 
{<< 
bestDay<< !
.<<! "
Day<<" %
}<<% &
$str<<& 1
{<<1 2
reason<<2 8
}<<8 9
$str<<9 ;
"<<; <
)<<< =
;<<= >
}== 
else>> 
System?? 
.?? 
Console?? 
.?? 
	WriteLine?? (
(??( )
$"??) +
$str??+ 2
{??2 3
city??3 7
.??7 8
Name??8 <
}??< =
$str??= E
"??E F
+??G H
$str@@ @
)@@@ A
;@@A B
}AA 	
varCC 
bestCityLocationCC 
=CC 
CityWeatherCC *
.CC* +
FindBestLocationCC+ ;
(CC; <
cityListCC< D
,CCD E
outCCF I
reasonCCJ P
)CCP Q
;CCQ R
SystemEE 
.EE 
ConsoleEE 
.EE 
	WriteLineEE  
(EE  !
$strEE! Q
+EER S
$strFF  Q
)FFQ R
;FFR S
ifGG 

(GG 
bestCityLocationGG 
!=GG 
nullGG  $
)GG$ %
SystemHH 
.HH 
ConsoleHH 
.HH 
	WriteLineHH $
(HH$ %
$"HH% '
$strHH' C
"HHC D
+HHE F
$"II 
{II 
bestCityLocationII 
.II  
NameII  $
}II$ %
$strII% 0
{II0 1
reasonII1 7
}II7 8
$strII8 :
"II: ;
)II; <
;II< =
elseJJ 
SystemJJ 
.JJ 
ConsoleJJ 
.JJ 
	WriteLineJJ %
(JJ% &
$strJJ& R
)JJR S
;JJS T
SystemKK 
.KK 
ConsoleKK 
.KK 
	WriteLineKK  
(KK  !
$strKK! Q
+KKR S
$strLL  Q
)LLQ R
;LLR S
CityWeatherNN 
.NN 
ExportBestDateToCSVNN '
(NN' (
cityListNN( 0
,NN0 1
outNN2 5
stringNN6 <
exportFilePathNN= K
)NNK L
;NNL M
ifPP 

(PP 
bestCityLocationPP 
!=PP 
nullPP  $
)PP$ %
{QQ 	
SystemRR 
.RR 
ConsoleRR 
.RR 
	WriteLineRR $
(RR$ %
$strRR% g
)RRg h
;RRh i
stringSS 

mailChoiceSS 
=SS 
SystemSS  &
.SS& '
ConsoleSS' .
.SS. /
ReadLineSS/ 7
(SS7 8
)SS8 9
??SS: <
$strSS= @
;SS@ A
ifTT 
(TT 

mailChoiceTT 
.TT 
ToLowerTT "
(TT" #
)TT# $
.TT$ %
EqualsTT% +
(TT+ ,
$strTT, /
)TT/ 0
)TT0 1
CityWeatherUU 
.UU 
SendDataToMailUU *
(UU* +
bestCityLocationUU+ ;
,UU; <
exportFilePathUU= K
)UUK L
;UUL M
}VV 	
SystemXX 
.XX 
ConsoleXX 
.XX 
	WriteLineXX  
(XX  !
$strXX! 2
)XX2 3
;XX3 4
stringYY 

exitChoiceYY 
=YY 
SystemYY "
.YY" #
ConsoleYY# *
.YY* +
ReadLineYY+ 3
(YY3 4
)YY4 5
??YY6 8
$strYY9 <
;YY< =
ifZZ 

(ZZ 

exitChoiceZZ 
.ZZ 
ToLowerZZ 
(ZZ 
)ZZ  
.ZZ  !
EqualsZZ! '
(ZZ' (
$strZZ( +
)ZZ+ ,
)ZZ, -
breakZZ. 3
;ZZ3 4
}[[ 
catch\\ 	
(\\
 
	Exception\\ 
ex\\ 
)\\ 
{]] 
Console^^ 
.^^ 
	WriteLine^^ 
(^^ 
ex^^ 
.^^ 
Message^^ $
+^^% &
$str^^' +
)^^+ ,
;^^, -
}__ 
}`` 